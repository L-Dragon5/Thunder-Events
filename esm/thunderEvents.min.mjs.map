{"version":3,"file":"thunderEvents.min.mjs","sources":["../lib/constants.js","../lib/utilities.js","../lib/state.js","../lib/exports.js"],"sourcesContent":["export const DEFAULT_FLOOR_PLAN = {\r\n  title: 'Venue',\r\n  imageSrc: '',\r\n  dimensions: {\r\n    height: 600,\r\n    width: 800,\r\n  },\r\n  clickableAreas: [],\r\n}\r\n\r\nexport const DEFAULT_GUIDE = {\r\n  locations: [],\r\n  events: [],\r\n  floorPlan: DEFAULT_FLOOR_PLAN,\r\n  rollOverTime: '12:00 AM',\r\n}\r\n\r\nconst FAVORITES_KEY = 'FAVORITE_EVENTS'\r\n\r\nexport const DEFAULT_ADD_FAVORITE = async event => {\r\n  const favoriteEvents = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]')\r\n  favoriteEvents.push(event)\r\n  const eventsJSON = JSON.stringify(favoriteEvents)\r\n  localStorage.setItem(FAVORITES_KEY, eventsJSON)\r\n  return favoriteEvents\r\n}\r\n\r\nexport const DEFAULT_REMOVE_FAVORITE = async event => {\r\n  const favoriteEvents = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]')\r\n  const removeIndex = favoriteEvents.findIndex(({ location: _location, start, name }) => {\r\n    const { location: cLocation, start: cStart, name: cName } = event\r\n    return _location === cLocation && start === cStart && name === cName\r\n  })\r\n  favoriteEvents.splice(removeIndex, 1)\r\n  const eventsJSON = JSON.stringify(favoriteEvents)\r\n  localStorage.setItem(FAVORITES_KEY, eventsJSON)\r\n  return favoriteEvents\r\n}\r\n\r\nexport const DEFAULT_GET_FAVORITES = async () => {\r\n  const favoriteEvents = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]')\r\n  return favoriteEvents\r\n}\r\n\r\nexport const DEFAULT_FETCH_DATA = () => Promise.resolve({\r\n  guide: DEFAULT_GUIDE,\r\n  addFavorite: DEFAULT_ADD_FAVORITE,\r\n  getFavorites: DEFAULT_GET_FAVORITES,\r\n})\r\n\r\nconst NOW = Date.now() // date in milliseconds\r\n\r\nconst HOUR = 1000 * 60 * 60 // milliseconds * seconds * minutes\r\n\r\nexport const DEFAULT_EVENT = {\r\n  start: NOW,\r\n  end: NOW + HOUR,\r\n  location: '(not provided)',\r\n  name: '(no name)',\r\n  host: '(not provided)',\r\n  category: '(not provided)',\r\n  description: '(no description)',\r\n}\r\n\r\nexport const DEFAULT_CLICKABLE_AREA = {\r\n  location: '(none)',\r\n  shape: 'rect',\r\n  coords: [],\r\n  href: '#',\r\n  alt: '',\r\n}\r\n\r\nexport const DEFAULT_TIMES = {\r\n  days: [],\r\n  interval: 60,\r\n}\r\n\r\nexport const DEFAULT_BREAKPOINT = '50em'\r\n\r\nexport const NOOP = () => {}\r\n","import { NOOP } from './constants'\r\n\r\nexport const getType = val => {\r\n  if (val === null) return 'null'\r\n  if (typeof val === 'object') return val.constructor.name.toLowerCase()\r\n  return typeof val\r\n}\r\n\r\nexport const checkType = (val, type) => {\r\n  const validString = getType(type) === 'string'\r\n  const validArray = getType(type) === 'array' && type.every(t => getType(t) === 'string')\r\n  if (!validString && !validArray) throw '`checkType()` expects either a string or array of strings in the second argument'\r\n  if (validString) return getType(val) === type\r\n  if (validArray) return type.some(t => getType(val) === t)\r\n}\r\n\r\nexport const isObject = obj => checkType(obj, 'object')\r\n\r\nexport const isEmpty = val => checkType(val, ['undefined', 'null'])\r\n\r\nexport const contains = (val, search) => {\r\n  const valIsString = checkType(val, 'string')\r\n  const valIsArray = checkType(val, 'array') && val.every(t => checkType(t, 'string'))\r\n  const validSearch = checkType(search, ['string', 'regexp'])\r\n  if (!valIsArray && !valIsString) throw '`contains()` expects either a string or array of strings in the first argument'\r\n  if (!validSearch) throw '`contains()` expects either a string or regular expression in the second argument'\r\n  if (valIsArray) return val.some(v => v.search(search) !== -1)\r\n  if (valIsString) return val.search(search) !== -1\r\n}\r\n\r\n/**\r\n * Returns a function which gets a field from a given object, unless it's empty,\r\n * in which case it gets that same field from a fallback object.\r\n * @param {object} fallbackObj - The object to be referenced when a field is empty on the original object.\r\n * @param {function} onFallback - An optional callback to run when the fallback is used.\r\n * @param {object} _altTypes - A mapping of fields to acceptable alternative types.\r\n * @returns {function} - Used to get the value from a provided key.\r\n */\r\nexport const useFallback = (fallbackObj, onFallback = NOOP, _altTypes = {}) => {\r\n  if (!isObject(fallbackObj)) throw '`useFallback()` expects an object in the first argument'\r\n  if (!checkType(onFallback, 'function')) throw '`useFallback()` expects a function in the second argument'\r\n  if (!isObject(_altTypes)) throw '`useFallback()` expects an object in the third argument'\r\n  return (obj, key) => {\r\n    const fallbackValue = fallbackObj[key]\r\n    const valid = isObject(obj)\r\n    const value = valid ? obj[key] : null\r\n    const empty = isEmpty(value)\r\n    const type = getType(value)\r\n    const altTypes = _altTypes[key]\r\n    const altTypesArr = checkType(altTypes, 'array') ? altTypes : (checkType(altTypes, 'string') ? [altTypes] : [])\r\n    const mismatch = type !== getType(fallbackValue) && !altTypesArr.some(t => t === type)\r\n    if (!valid || empty || mismatch) {\r\n      const status = !valid ? 'invalid' : (empty ? 'empty' : 'mismatch')\r\n      onFallback(status, key)\r\n      return fallbackValue\r\n    }\r\n    return value\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a function which casts any value to the same structure as the provided object (the type).\r\n * @param {object} type - An object which serves as the (shallow) structure constraints.\r\n * @param {string} name - The optional name of the type for logging purposes.\r\n * @param {object} altTypes - A mapping of fields to acceptable alternative types.\r\n * @returns {function} - Used to cast a provided value to the given type.\r\n */\r\nexport const useCast = (type, name = 'object', altTypes = {}) => {\r\n  if (!isObject(type)) throw 'You may only cast to custom object types'\r\n  return obj => {\r\n    if (!isObject(obj)) return type\r\n    const getValue = useFallback(type, (status, key) => {\r\n      if (status === 'invalid') console.warn(`The provided ${name} is not a valid object.`)\r\n      else if (status === 'mismatch') console.warn(`The \\`${key}\\` field expected type \\`${getType(type[key])}\\` but got \\`${getType(obj[key])}\\`.`)\r\n      else if (status === 'empty') console.warn(`The provided ${name} did not have the \\`${key}\\` field.`)\r\n    }, altTypes)\r\n    return Object.keys(type).reduce((castObj, key) => {\r\n      castObj[key] = getValue(obj, key)\r\n      return castObj\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport const checkFilterType = (filter = {}) => {\r\n  if ('after' in filter && !checkType(filter.after, ['number', 'date'])) throw 'The `after` field expects a number or date'\r\n  if ('before' in filter && !checkType(filter.before, ['number', 'date'])) throw 'The `before` field expects a number or date'\r\n  if ('locations' in filter && !checkType(filter.locations, 'array')) throw 'The `locations` field expects an array'\r\n  if ('search' in filter && !checkType(filter.search, ['string', 'regexp'])) throw 'The `search` field expects a string or regular expression'\r\n  return true // indicate success\r\n}\r\n\r\n/**\r\n * This is the most efficient way to clear HTML, much faster than innerHTML.\r\n * @param {HTMLElement} element - the DOM element we want to empty\r\n */\r\nexport const clearHTML = element => {\r\n  let i = element.childNodes.length\r\n  while (i--) { element.removeChild(element.lastChild) }\r\n}\r\n\r\n/**\r\n * This is the most efficient way to parse HTML, much faster than innerHTML.\r\n *\r\n * @param {string} htmlStr - a string containing only raw HTML\r\n */\r\nexport const parseHTML = htmlStr => {\r\n  const range = document.createRange()\r\n  range.selectNode(document.body) // required in Safari\r\n  return range.createContextualFragment(htmlStr)\r\n}\r\n\r\n/**\r\n * This helps us avoid trailing commas when mapping template literals.\r\n * @param {Array} arr - the array to iterate\r\n * @param {function} callback - the callback for each iteration; should return a string or stringifiable value\r\n */\r\nexport const mapString = (arr, callback) => arr.map(callback).join('')\r\n\r\n/**\r\n * Rounds a date to the nearest given minute\r\n * @param {Date|number|string} _date - The date to round (or anything that can be parsed as a date)\r\n * @param {number} nearestMinute - The nearest minute to round to (15 by default)\r\n */\r\nexport const roundMinutes = (_date, nearestMinute = 15) => {\r\n  const date = new Date(_date)\r\n  const roundedMinutes = Math.round(date.getMinutes() / nearestMinute) * nearestMinute\r\n  date.setMinutes(roundedMinutes)\r\n  return date\r\n}\r\n\r\nexport const WholeNumber = num => Number(num.toFixed())\r\n\r\n/**\r\n * Gets the name of the day based on the index (typically returned by `date.getDay()`)\r\n * @param {number} idx - The index of the day of the week\r\n * @param {boolean} short - Whether to abbreviate the day names or not\r\n * @returns {string} - The name of the day of the week\r\n */\r\nexport const getDay = (idx, short = false) => {\r\n  const days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n  const shortDays = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tues',\r\n    'Wed',\r\n    'Thurs',\r\n    'Fri',\r\n    'Sat',\r\n  ]\r\n  return short ? shortDays[idx] : days[idx]\r\n}\r\n\r\nexport const getDateInfo = _date => {\r\n  const date = new Date(_date)\r\n  return {\r\n    time: date.toLocaleTimeString('en-US', { timeStyle: 'short' }),\r\n    day: getDay(date.getDay()),\r\n    date: date.toLocaleDateString(),\r\n  }\r\n}\r\n\r\n/**\r\n * Generates a string representing javascript, which can be used in the\r\n * HTML templates of native web components.\r\n * \r\n * EXAMPLE:\r\n * ```js\r\n *   const open = true\r\n *   const html = `<button onclick=\"this.getRootNode().host.openDialog(${open})\">Click me</button>`\r\n * ```\r\n * \r\n * versus\r\n * \r\n * ```js\r\n *   const open = true\r\n *   const html = `<button onclick=\"${runMethod('openDialog', open)}\">Click me</button>`\r\n * ```\r\n * \r\n * @param {string} name - The name of the component method to run\r\n * @param {...*} args - The arguments to be used in the function call (objects will be converted to JSON and encoded as a URI component)\r\n * @returns {string} - A string representing JavaScript code\r\n */\r\nexport const runMethod = (name, ...args) => {\r\n\r\n  const mapType = value => {\r\n\r\n    // preserve keywords that can be used in html attribute handlers\r\n    if (value === 'event' || value === 'this') return value\r\n\r\n    // handle the string rendering of arguments based on their type\r\n    const type = getType(value)\r\n    const map = {\r\n\r\n      // stringify objects to avoid [object Object] and encode to avoid double quote conflicts\r\n      object: `\\`${encodeURIComponent(JSON.stringify(value))}\\``,\r\n\r\n      // wrap strings in backticks in case they're multiline\r\n      string: `\\`${value}\\``,\r\n\r\n      // all other types are rendered without quotes\r\n      default: String(value)\r\n    }\r\n\r\n    return map[type] || map.default\r\n  }\r\n\r\n  return `this.getRootNode().host.${name}(${args.length ? `${[...args].map(mapType)}` : 'event'})`\r\n}\r\n\r\nexport const getEventId = ({ location, name, start: _start }) => {\r\n  const snip = s => s.replace(/[^a-zA-Z0-9]/g, '')\r\n  const date = new Date(_start)\r\n  const start = `${date.toLocaleDateString()}-${date.toLocaleTimeString()}`\r\n  return `${snip(location)}-${snip(name)}-${snip(start)}`\r\n}\r\n\r\nexport const search = (_input, _text) => {\r\n\r\n  // * replace variation characters (for example, é becomes e)\r\n  // * remove anything that isn't alphanumeric (including spaces)\r\n  //     ^ this lets \"megaman\" match \"mega man\"\r\n  // * use lower case for case-insensitive search\r\n  const formatForSimilarMatch = str => str\r\n    ?.normalize('NFD')\r\n    .replace(/\\p{Diacritic}/gu, '')\r\n    .replace(/[^a-zA-Z0-9]/g, '')\r\n    .toLowerCase()\r\n\r\n  // first try matching the entire query\r\n  const input = formatForSimilarMatch(_input)\r\n  const text = formatForSimilarMatch(_text)\r\n  if (text.search(input) !== -1) return true\r\n  if (input.search(text) !== -1) return true\r\n\r\n  // if that fails, try each word\r\n  return _input.split(/\\s+/g).some(input =>\r\n    text.search(formatForSimilarMatch(input)) !== -1)\r\n}\r\n\r\nexport const trim = str => str.length > 40 ? str.slice(0, 36) + '...' : str\r\n\r\nexport const getMarkerCoords = (marker, clickableAreas) => {\r\n  const clickableArea = clickableAreas.find(({ location }) => marker === location)\r\n  const allX = clickableArea.coords.filter((_, idx) => idx % 2 === 0)\r\n  const allY = clickableArea.coords.filter((_, idx) => idx % 2 !== 0)\r\n  const minX = Math.min(...allX)\r\n  const minY = Math.min(...allY)\r\n  const maxX = Math.max(...allX)\r\n  const maxY = Math.max(...allY)\r\n  const x = (minX + maxX) / 2\r\n  const y = (minY + maxY) / 2\r\n  return [x, y]\r\n}\r\n\r\nexport const getLastTimeInThreshold = (currentDate, allDates, threshold = '12:00 AM') => {\r\n  const lastInCurrentDay = Math.max(...allDates.filter(t => t.getDate() === currentDate.getDate()))\r\n  if (threshold === '12:00 AM') return new Date(lastInCurrentDay)\r\n  const nextDate = new Date(currentDate)\r\n  nextDate.setDate(currentDate.getDate() + 1)\r\n  nextDate.setTime(new Date(`${nextDate.toLocaleDateString()} ${threshold}`).getTime())\r\n  const allTimesNextDay = allDates.filter(t => t.getDate() === nextDate.getDate())\r\n  const lastInNextDay = Math.max(...allTimesNextDay.filter(t => t.getTime() <= nextDate.getTime()))\r\n  return new Date(lastInNextDay > 0 ? lastInNextDay : lastInCurrentDay)\r\n}\r\n","import { DEFAULT_ADD_FAVORITE, DEFAULT_REMOVE_FAVORITE, DEFAULT_GET_FAVORITES, DEFAULT_GUIDE } from './constants'\r\nimport { checkType, roundMinutes, getDay, getLastTimeInThreshold } from './utilities'\r\n\r\nexport const state = {\r\n\r\n  // utilities for synchronous actions after loading state\r\n  _hasFetched: false,\r\n  get hasFetched() { return this._hasFetched },\r\n  set hasFetched(bool) {\r\n    this._hasFetched = bool\r\n    if (bool === false) return false\r\n    this.fetchQueue.forEach(resolve => resolve())\r\n    return true\r\n  },\r\n  fetchQueue: [],\r\n  waitForFetch() {\r\n    return new Promise(resolve => {\r\n      if (this.hasFetched) resolve()\r\n      else this.fetchQueue.push(() => resolve())\r\n    })\r\n  },\r\n\r\n  // default guide\r\n  guide: DEFAULT_GUIDE,\r\n\r\n  // default favorite functionality\r\n  addFavorite: DEFAULT_ADD_FAVORITE,\r\n  removeFavorite: DEFAULT_REMOVE_FAVORITE,\r\n  getFavorites: DEFAULT_GET_FAVORITES,\r\n\r\n  // get locations and add any missed from events dynamically\r\n  get locations() {\r\n    const locations = this.guide?.locations ?? []\r\n    const events = this.guide?.events ?? []\r\n    return [...events.reduce((locations, event) => {\r\n      if (!checkType(event, 'object')) return locations\r\n      if (!checkType(event.location, 'string')) return locations\r\n      if (!locations.has(event.location)) locations.add(event.location)\r\n      return locations\r\n    }, new Set(locations))]\r\n  },\r\n\r\n  // get times from events dynamically\r\n  get times() {\r\n    const events = this.guide?.events ?? []\r\n    const threshold = this.guide?.rollOverTime ?? '12:00 AM'\r\n    const allTimes = [...events.reduce((times, event) => {\r\n      if (!checkType(event, 'object')) return times\r\n      if (!checkType(event.start, ['number', 'date'])) return times\r\n      if (!checkType(event.end, ['number', 'date'])) return times\r\n      times.add(roundMinutes(event.start))\r\n      times.add(roundMinutes(event.end))\r\n      return times\r\n    }, new Set())].sort()\r\n    const earliestTime = new Date(Math.min(...allTimes))\r\n    const latestTime = new Date(Math.max(...allTimes))\r\n    const interval = allTimes.reduce((interval, date) => {\r\n      if (interval !== 15) {\r\n        const minutes = date.getMinutes()\r\n        if (minutes === 30) interval = 30\r\n        if (minutes === 15 || minutes === 45) interval = 15\r\n      }\r\n      return interval\r\n    }, 0)\r\n    const getTimeObject = date => ({\r\n      date,\r\n      timeString: date.toLocaleTimeString('en-US', { timeStyle: 'short' }),\r\n    })\r\n    const getFullDay = time => `${getDay(time.getDay())} ${time.toLocaleDateString()}`\r\n    let days = { [getFullDay(earliestTime)]: [getTimeObject(earliestTime)] }\r\n    let prevTime = earliestTime\r\n    let currentDay = getFullDay(prevTime)\r\n    while (prevTime < latestTime) {\r\n      const lastTimeInDay = getLastTimeInThreshold(prevTime, allTimes, threshold)\r\n      let currentTime = null\r\n      if (Number(lastTimeInDay) === Number(prevTime)) {\r\n        currentTime = new Date(allTimes.find(time => time > prevTime))\r\n        currentDay = getFullDay(currentTime)\r\n        days[currentDay] = [getTimeObject(currentTime)]\r\n      } else {\r\n        currentTime = new Date(prevTime)\r\n        const intervalInMs = interval * 1000 * 60\r\n        currentTime.setTime(currentTime.getTime() + intervalInMs)\r\n        days[currentDay].push(getTimeObject(currentTime))\r\n      }\r\n      prevTime = currentTime\r\n    }\r\n    return {\r\n      days,\r\n      interval,\r\n    }\r\n  },\r\n}\r\n","import {\r\n  DEFAULT_FETCH_DATA,\r\n  DEFAULT_EVENT,\r\n  DEFAULT_FLOOR_PLAN,\r\n  DEFAULT_CLICKABLE_AREA,\r\n} from './constants'\r\nimport {\r\n  useCast,\r\n  checkType,\r\n  checkFilterType,\r\n  isObject,\r\n} from './utilities'\r\nimport { state as INITIAL_STATE } from './state'\r\n\r\n// share state in the global context to avoid issues\r\n// with imports between two separate bundles.\r\nconst getState = () => {\r\n  globalThis.__thunderEvents__sharedState =\r\n    globalThis.__thunderEvents__sharedState // existing state\r\n    ?? INITIAL_STATE // initialize if none exists already\r\n  return globalThis.__thunderEvents__sharedState\r\n}\r\n\r\nconst init = async (init = DEFAULT_FETCH_DATA) => {\r\n  const state = getState()\r\n  const data = await init()\r\n  if (!isObject(data)) throw '`init()` must return an object'\r\n  const { guide } = data\r\n  if (!isObject(guide)) throw 'The `guide` field expects an object'\r\n  if ('events' in guide) {\r\n    if (!checkType(guide.events, 'array')) throw 'The `guide.events` field expects an array'\r\n    const castEvent = useCast(DEFAULT_EVENT, 'event', { start: 'date', end: 'date' })\r\n    state.guide.events = guide.events.map(castEvent)\r\n  }\r\n  if ('floorPlan' in guide) {\r\n    if (!isObject(guide.floorPlan)) throw 'The `guide.floorPlan` field expects an object'\r\n    const castFloorPlan = useCast(DEFAULT_FLOOR_PLAN, 'floor plan')\r\n    const castClickableArea = useCast(DEFAULT_CLICKABLE_AREA, 'clickable area')\r\n    const floorPlan = castFloorPlan(guide.floorPlan)\r\n    state.guide.floorPlan = {\r\n      ...floorPlan,\r\n      clickableAreas: floorPlan.clickableAreas.map(castClickableArea),\r\n    }\r\n  }\r\n  if ('locations' in guide) {\r\n    if (!checkType(guide.events, 'array')) throw 'The `guide.locations` field expects an array'\r\n    state.guide.locations = guide.locations.map(loc => String(loc))\r\n  }\r\n  if ('rollOverTime' in guide) {\r\n    if (!checkType(guide.rollOverTime, 'string')) throw 'The `guide.rollOverTime` field expects a string'\r\n    const timeRegex = /(^((1[0-2])|0?[1-9]):\\d{2} (AM|PM)$)|(^(([0-1]?[0-9])|(2[0-3])):\\d{2}$)/\r\n    if (!timeRegex.test(guide.rollOverTime)) throw 'The `guide.rollOverTime` field expects the string in time format.  Example: \"1:00 PM\" for 12-hours or \"13:00\" for 24-hours'\r\n    state.guide.rollOverTime = guide.rollOverTime\r\n  }\r\n  if ('addFavorite' in data) {\r\n    if (!checkType(data.addFavorite, 'function')) throw 'The `addFavorite` field expects a function'\r\n    state.addFavorite = data.addFavorite\r\n  }\r\n  if ('removeFavorite' in data) {\r\n    if (!checkType(data.removeFavorite, 'function')) throw 'The `removeFavorite` field expects a function'\r\n    state.removeFavorite = data.removeFavorite\r\n  }\r\n  if ('getFavorites' in data) {\r\n    if (!checkType(data.getFavorites, 'function')) throw 'The `getFavorites` field expects a function'\r\n    state.getFavorites = data.getFavorites\r\n  }\r\n  state.hasFetched = true\r\n}\r\n\r\nconst getEvents = async (_filters = {}) => {\r\n  const state = getState()\r\n  await state.waitForFetch()\r\n  if (!isObject(_filters)) throw '`getEvents()` expects an object in the first argument'\r\n  const { include: _include = {}, exclude: _exclude = {} } = _filters\r\n  checkFilterType(_include) // throws if invalid\r\n  checkFilterType(_exclude) // throws if invalid\r\n  const filters = {\r\n    ..._filters,\r\n    include: {\r\n      ..._include,\r\n      after: _include.after ? Number(_include.after) : 0,\r\n      before: _include.before ? Number(_include.before) : Infinity,\r\n    },\r\n    exclude: {\r\n      ..._exclude,\r\n      after: _exclude.after ? Number(_exclude.after) : Infinity,\r\n      before: _exclude.before ? Number(_exclude.before) : 0,\r\n    },\r\n  }\r\n  const { include = {}, exclude = {} } = filters\r\n  return state.guide.events.filter(event => {\r\n    \r\n    // filter within time range\r\n    if (event.start < include.after) return false\r\n    if (event.start > exclude.after) return false\r\n    if (event.end > include.before) return false\r\n    if (event.end < exclude.before) return false\r\n    \r\n    // filter by location\r\n    if ('locations' in include && !contains(include.locations, event.location)) return false\r\n    if ('locations' in exclude && contains(exclude.locations, event.location)) return false\r\n    \r\n    // filter by name\r\n    if ('search' in include && !contains(event.name, include.search)) return false\r\n    if ('search' in exclude && contains(event.name, exclude.search)) return false\r\n\r\n    // if all previous checks pass, keep this event in the array\r\n    return true\r\n  })\r\n}\r\n\r\nconst getLocations = async () => {\r\n  const state = getState()\r\n  await state.waitForFetch()\r\n  return state.locations\r\n}\r\n\r\nconst getTimes = async () => {\r\n  const state = getState()\r\n  await state.waitForFetch()\r\n  return state.times\r\n}\r\n\r\nconst getFloorPlan = async () => {\r\n  const state = getState()\r\n  await state.waitForFetch()\r\n  return state.guide.floorPlan\r\n}\r\n\r\nconst addFavorite = async event => {\r\n  const state = getState()\r\n  const favorites = await state.addFavorite(event)\r\n  return favorites\r\n}\r\n\r\nconst removeFavorite = async event => {\r\n  const state = getState()\r\n  const favorites = await state.removeFavorite(event)\r\n  return favorites\r\n}\r\n\r\nconst getFavorites = async () => {\r\n  const state = getState()\r\n  const favorites = await state.getFavorites()\r\n  return favorites\r\n}\r\n\r\nexport {\r\n  init,\r\n  addFavorite,\r\n  removeFavorite,\r\n  getFavorites,\r\n  getEvents,\r\n  getLocations,\r\n  getTimes,\r\n  getFloorPlan,\r\n}\r\n"],"names":["DEFAULT_FLOOR_PLAN","title","imageSrc","dimensions","height","width","clickableAreas","DEFAULT_GUIDE","locations","events","floorPlan","rollOverTime","FAVORITES_KEY","DEFAULT_ADD_FAVORITE","event","favoriteEvents","JSON","parse","localStorage","getItem","push","eventsJSON","stringify","setItem","DEFAULT_REMOVE_FAVORITE","removeIndex","findIndex","location","_location","start","name","cLocation","cStart","cName","splice","DEFAULT_GET_FAVORITES","DEFAULT_FETCH_DATA","Promise","resolve","guide","addFavorite","getFavorites","NOW","Date","now","HOUR","DEFAULT_EVENT","end","host","category","description","DEFAULT_CLICKABLE_AREA","shape","coords","href","alt","NOOP","getType","val","constructor","toLowerCase","checkType","type","validString","validArray","every","t","some","isObject","obj","isEmpty","useFallback","fallbackObj","onFallback","_altTypes","key","fallbackValue","valid","value","empty","altTypes","altTypesArr","mismatch","status","useCast","getValue","console","warn","Object","keys","reduce","castObj","checkFilterType","filter","after","before","search","roundMinutes","_date","nearestMinute","date","roundedMinutes","Math","round","getMinutes","setMinutes","getDay","idx","short","days","shortDays","getLastTimeInThreshold","currentDate","allDates","threshold","lastInCurrentDay","max","getDate","nextDate","setDate","setTime","toLocaleDateString","getTime","allTimesNextDay","lastInNextDay","state","_hasFetched","hasFetched","bool","fetchQueue","forEach","waitForFetch","removeFavorite","has","add","Set","times","allTimes","sort","earliestTime","min","latestTime","interval","minutes","getTimeObject","timeString","toLocaleTimeString","timeStyle","getFullDay","time","prevTime","currentDay","lastTimeInDay","currentTime","Number","find","intervalInMs","getState","globalThis","__thunderEvents__sharedState","INITIAL_STATE","init","data","castEvent","map","castFloorPlan","castClickableArea","loc","String","timeRegex","test","getEvents","_filters","include","_include","exclude","_exclude","filters","Infinity","contains","getLocations","getTimes","getFloorPlan","favorites"],"mappings":"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"}