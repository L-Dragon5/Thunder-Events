{"version":3,"file":"thunderEvents.min.mjs","sources":["../lib/constants.js","../lib/utilities.js","../lib/state.js","../lib/exports.js","../lib/uiComponents/ProgramGuideNative/componentUtils.js","../lib/uiComponents/ProgramGuideNative/getStyles.js","../lib/uiComponents/ProgramGuideNative/render/renderSortDialog.js","../lib/uiComponents/ProgramGuideNative/render/renderEventDialog.js","../lib/uiComponents/ProgramGuideNative/render/renderByLocation.js","../lib/uiComponents/ProgramGuideNative/render/renderByTime.js","../lib/uiComponents/ProgramGuideNative/render/renderFavorites.js","../lib/uiComponents/ProgramGuideNative/render/renderSearchResults.js","../lib/uiComponents/ProgramGuideNative/render/renderFloorPlan.js","../node_modules/dialog-polyfill/dist/dialog-polyfill.esm.js","../lib/uiComponents/ProgramGuideNative/render/index.js","../lib/uiComponents/ProgramGuideNative/render/renderSearchBar.js","../lib/uiComponents/ProgramGuideNative/actions/addFavorite.js","../lib/uiComponents/ProgramGuideNative/actions/removeFavorite.js","../lib/uiComponents/ProgramGuideNative/actions/handleEsc.js","../lib/uiComponents/ProgramGuideNative/actions/handleHashChange.js","../lib/uiComponents/ProgramGuideNative/actions/showFloorPlan.js","../lib/uiComponents/ProgramGuideNative/actions/toggleFloorPlanInteractive.js","../lib/uiComponents/ProgramGuideNative/actions/toggleHeaders.js","../lib/uiComponents/ProgramGuideNative/actions/toggleSortDialog.js","../lib/uiComponents/ProgramGuideNative/actions/openEventDialog.js","../lib/uiComponents/ProgramGuideNative/actions/closeEventDialog.js","../lib/uiComponents/ProgramGuideNative/actions/selectActiveLocation.js","../lib/uiComponents/ProgramGuideNative/actions/selectActiveDay.js","../lib/uiComponents/ProgramGuideNative/actions/selectActiveTime.js","../lib/uiComponents/ProgramGuideNative/actions/selectSortBy.js","../lib/uiComponents/ProgramGuideNative/actions/changeSearch.js","../lib/uiComponents/ProgramGuideNative/actions/search.js","../lib/uiComponents/ProgramGuideNative/index.js","../src/index.js"],"sourcesContent":["export const DEFAULT_FLOOR_PLAN = {\r\n  title: 'Venue',\r\n  imageSrc: '',\r\n  dimensions: {\r\n    height: 600,\r\n    width: 800,\r\n  },\r\n  clickableAreas: [],\r\n}\r\n\r\nexport const DEFAULT_GUIDE = {\r\n  events: [],\r\n  floorPlan: DEFAULT_FLOOR_PLAN,\r\n}\r\n\r\nconst FAVORITES_KEY = 'FAVORITE_EVENTS'\r\n\r\nexport const DEFAULT_ADD_FAVORITE = async event => {\r\n  const favoriteEvents = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]')\r\n  favoriteEvents.push(event)\r\n  const eventsJSON = JSON.stringify(favoriteEvents)\r\n  localStorage.setItem(FAVORITES_KEY, eventsJSON)\r\n  return favoriteEvents\r\n}\r\n\r\nexport const DEFAULT_REMOVE_FAVORITE = async event => {\r\n  const favoriteEvents = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]')\r\n  const removeIndex = favoriteEvents.findIndex(({ location: _location, start, name }) => {\r\n    const { location: cLocation, start: cStart, name: cName } = event\r\n    return _location === cLocation && start === cStart && name === cName\r\n  })\r\n  favoriteEvents.splice(removeIndex, 1)\r\n  const eventsJSON = JSON.stringify(favoriteEvents)\r\n  localStorage.setItem(FAVORITES_KEY, eventsJSON)\r\n  return favoriteEvents\r\n}\r\n\r\nexport const DEFAULT_GET_FAVORITES = async () => {\r\n  const favoriteEvents = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]')\r\n  return favoriteEvents\r\n}\r\n\r\nexport const DEFAULT_FETCH_DATA = () => Promise.resolve({\r\n  guide: DEFAULT_GUIDE,\r\n  addFavorite: DEFAULT_ADD_FAVORITE,\r\n  getFavorites: DEFAULT_GET_FAVORITES,\r\n})\r\n\r\nconst NOW = Date.now() // date in milliseconds\r\n\r\nconst HOUR = 1000 * 60 * 60 // milliseconds * seconds * minutes\r\n\r\nexport const DEFAULT_EVENT = {\r\n  start: NOW,\r\n  end: NOW + HOUR,\r\n  location: '(not provided)',\r\n  name: '(no name)',\r\n  host: '(not provided)',\r\n  category: '(not provided)',\r\n  description: '(no description)',\r\n}\r\n\r\nexport const DEFAULT_CLICKABLE_AREA = {\r\n  location: '(none)',\r\n  shape: 'rect',\r\n  coords: [],\r\n  href: '#',\r\n  alt: '',\r\n}\r\n\r\nexport const DEFAULT_TIMES = {\r\n  days: [],\r\n  interval: 60,\r\n}\r\n\r\nexport const DEFAULT_BREAKPOINT = '50em'\r\n\r\nexport const NOOP = () => {}\r\n","import { NOOP } from './constants'\r\n\r\nexport const getType = val => {\r\n  if (val === null) return 'null'\r\n  if (typeof val === 'object') return val.constructor.name.toLowerCase()\r\n  return typeof val\r\n}\r\n\r\nexport const checkType = (val, type) => {\r\n  const validString = getType(type) === 'string'\r\n  const validArray = getType(type) === 'array' && type.every(t => getType(t) === 'string')\r\n  if (!validString && !validArray) throw '`checkType()` expects either a string or array of strings in the second argument'\r\n  if (validString) return getType(val) === type\r\n  if (validArray) return type.some(t => getType(val) === t)\r\n}\r\n\r\nexport const isObject = obj => checkType(obj, 'object')\r\n\r\nexport const isEmpty = val => checkType(val, ['undefined', 'null'])\r\n\r\nexport const contains = (val, search) => {\r\n  const valIsString = checkType(val, 'string')\r\n  const valIsArray = checkType(val, 'array') && val.every(t => checkType(t, 'string'))\r\n  const validSearch = checkType(search, ['string', 'regexp'])\r\n  if (!valIsArray && !valIsString) throw '`contains()` expects either a string or array of strings in the first argument'\r\n  if (!validSearch) throw '`contains()` expects either a string or regular expression in the second argument'\r\n  if (valIsArray) return val.some(v => v.search(search) !== -1)\r\n  if (valIsString) return val.search(search) !== -1\r\n}\r\n\r\n/**\r\n * Returns a function which gets a field from a given object, unless it's empty,\r\n * in which case it gets that same field from a fallback object.\r\n * @param {object} fallbackObj - The object to be referenced when a field is empty on the original object.\r\n * @param {function} onFallback - An optional callback to run when the fallback is used.\r\n * @param {object} _altTypes - A mapping of fields to acceptable alternative types.\r\n * @returns {function} - Used to get the value from a provided key.\r\n */\r\nexport const useFallback = (fallbackObj, onFallback = NOOP, _altTypes = {}) => {\r\n  if (!isObject(fallbackObj)) throw '`useFallback()` expects an object in the first argument'\r\n  if (!checkType(onFallback, 'function')) throw '`useFallback()` expects a function in the second argument'\r\n  if (!isObject(_altTypes)) throw '`useFallback()` expects an object in the third argument'\r\n  return (obj, key) => {\r\n    const fallbackValue = fallbackObj[key]\r\n    const valid = isObject(obj)\r\n    const value = valid ? obj[key] : null\r\n    const empty = isEmpty(value)\r\n    const type = getType(value)\r\n    const altTypes = _altTypes[key]\r\n    const altTypesArr = checkType(altTypes, 'array') ? altTypes : (checkType(altTypes, 'string') ? [altTypes] : [])\r\n    const mismatch = type !== getType(fallbackValue) && !altTypesArr.some(t => t === type)\r\n    if (!valid || empty || mismatch) {\r\n      const status = !valid ? 'invalid' : (empty ? 'empty' : 'mismatch')\r\n      onFallback(status, key)\r\n      return fallbackValue\r\n    }\r\n    return value\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a function which casts any value to the same structure as the provided object (the type).\r\n * @param {object} type - An object which serves as the (shallow) structure constraints.\r\n * @param {string} name - The optional name of the type for logging purposes.\r\n * @param {object} altTypes - A mapping of fields to acceptable alternative types.\r\n * @returns {function} - Used to cast a provided value to the given type.\r\n */\r\nexport const useCast = (type, name = 'object', altTypes = {}) => {\r\n  if (!isObject(type)) throw 'You may only cast to custom object types'\r\n  return obj => {\r\n    if (!isObject(obj)) return type\r\n    const getValue = useFallback(type, (status, key) => {\r\n      if (status === 'invalid') console.warn(`The provided ${name} is not a valid object.`)\r\n      else if (status === 'mismatch') console.warn(`The \\`${key}\\` field expected type \\`${getType(type[key])}\\` but got \\`${getType(obj[key])}\\`.`)\r\n      else if (status === 'empty') console.warn(`The provided ${name} did not have the \\`${key}\\` field.`)\r\n    }, altTypes)\r\n    return Object.keys(type).reduce((castObj, key) => {\r\n      castObj[key] = getValue(obj, key)\r\n      return castObj\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport const checkFilterType = (filter = {}) => {\r\n  if ('after' in filter && !checkType(filter.after, ['number', 'date'])) throw 'The `after` field expects a number or date'\r\n  if ('before' in filter && !checkType(filter.before, ['number', 'date'])) throw 'The `before` field expects a number or date'\r\n  if ('locations' in filter && !checkType(filter.locations, 'array')) throw 'The `locations` field expects an array'\r\n  if ('search' in filter && !checkType(filter.search, ['string', 'regexp'])) throw 'The `search` field expects a string or regular expression'\r\n  return true // indicate success\r\n}\r\n\r\n/**\r\n * This is the most efficient way to clear HTML, much faster than innerHTML.\r\n * @param {HTMLElement} element - the DOM element we want to empty\r\n */\r\nexport const clearHTML = element => {\r\n  let i = element.childNodes.length\r\n  while (i--) { element.removeChild(element.lastChild) }\r\n}\r\n\r\n/**\r\n * This is the most efficient way to parse HTML, much faster than innerHTML.\r\n *\r\n * @param {string} htmlStr - a string containing only raw HTML\r\n */\r\nexport const parseHTML = htmlStr => {\r\n  const range = document.createRange()\r\n  range.selectNode(document.body) // required in Safari\r\n  return range.createContextualFragment(htmlStr)\r\n}\r\n\r\n/**\r\n * This helps us avoid trailing commas when mapping template literals.\r\n * @param {Array} arr - the array to iterate\r\n * @param {function} callback - the callback for each iteration; should return a string or stringifiable value\r\n */\r\nexport const mapString = (arr, callback) => arr.map(callback).join('')\r\n\r\n/**\r\n * Rounds a date to the nearest given minute\r\n * @param {Date|number|string} _date - The date to round (or anything that can be parsed as a date)\r\n * @param {number} nearestMinute - The nearest minute to round to (15 by default)\r\n */\r\nexport const roundMinutes = (_date, nearestMinute = 15) => {\r\n  const date = new Date(_date)\r\n  const roundedMinutes = Math.round(date.getMinutes() / nearestMinute) * nearestMinute\r\n  date.setMinutes(roundedMinutes)\r\n  return date\r\n}\r\n\r\nexport const WholeNumber = num => Number(num.toFixed())\r\n\r\n/**\r\n * Gets the name of the day based on the index (typically returned by `date.getDay()`)\r\n * @param {number} idx - The index of the day of the week\r\n * @param {boolean} short - Whether to abbreviate the day names or not\r\n * @returns {string} - The name of the day of the week\r\n */\r\nexport const getDay = (idx, short = false) => {\r\n  const days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n  const shortDays = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tues',\r\n    'Wed',\r\n    'Thurs',\r\n    'Fri',\r\n    'Sat',\r\n  ]\r\n  return short ? shortDays[idx] : days[idx]\r\n}\r\n\r\nexport const getDateInfo = _date => {\r\n  const date = new Date(_date)\r\n  return {\r\n    time: date.toLocaleTimeString('en-US', { timeStyle: 'short' }),\r\n    day: getDay(date.getDay()),\r\n    date: date.toLocaleDateString(),\r\n  }\r\n}\r\n\r\n/**\r\n * Generates a string representing javascript, which can be used in the\r\n * HTML templates of native web components.\r\n * \r\n * EXAMPLE:\r\n * ```js\r\n *   const open = true\r\n *   const html = `<button onclick=\"this.getRootNode().host.openDialog(${open})\">Click me</button>`\r\n * ```\r\n * \r\n * versus\r\n * \r\n * ```js\r\n *   const open = true\r\n *   const html = `<button onclick=\"${runMethod('openDialog', open)}\">Click me</button>`\r\n * ```\r\n * \r\n * @param {string} name - The name of the component method to run\r\n * @param {...*} args - The arguments to be used in the function call (objects will be converted to JSON and encoded as a URI component)\r\n * @returns {string} - A string representing JavaScript code\r\n */\r\nexport const runMethod = (name, ...args) => {\r\n\r\n  const mapType = value => {\r\n\r\n    // preserve keywords that can be used in html attribute handlers\r\n    if (value === 'event' || value === 'this') return value\r\n\r\n    // handle the string rendering of arguments based on their type\r\n    const type = getType(value)\r\n    const map = {\r\n\r\n      // stringify objects to avoid [object Object] and encode to avoid double quote conflicts\r\n      object: `\\`${encodeURIComponent(JSON.stringify(value))}\\``,\r\n\r\n      // wrap strings in backticks in case they're multiline\r\n      string: `\\`${value}\\``,\r\n\r\n      // all other types are rendered without quotes\r\n      default: String(value)\r\n    }\r\n\r\n    return map[type] || map.default\r\n  }\r\n\r\n  return `this.getRootNode().host.${name}(${args.length ? `${[...args].map(mapType)}` : 'event'})`\r\n}\r\n\r\nexport const getEventId = ({ location, name, start: _start }) => {\r\n  const snip = s => s.replace(/[^a-zA-Z0-9]/g, '')\r\n  const date = new Date(_start)\r\n  const start = `${date.toLocaleDateString()}-${date.toLocaleTimeString()}`\r\n  return `${snip(location)}-${snip(name)}-${snip(start)}`\r\n}\r\n\r\nexport const search = (_input, _text) => {\r\n\r\n  // * replace variation characters (for example, é becomes e)\r\n  // * remove anything that isn't alphanumeric (including spaces)\r\n  //     ^ this lets \"megaman\" match \"mega man\"\r\n  // * use lower case for case-insensitive search\r\n  const formatForSimilarMatch = str => str\r\n    ?.normalize('NFD')\r\n    .replace(/\\p{Diacritic}/gu, '')\r\n    .replace(/[^a-zA-Z0-9]/g, '')\r\n    .toLowerCase()\r\n\r\n  // first try matching the entire query\r\n  const input = formatForSimilarMatch(_input)\r\n  const text = formatForSimilarMatch(_text)\r\n  if (text.search(input) !== -1) return true\r\n  if (input.search(text) !== -1) return true\r\n\r\n  // if that fails, try each word\r\n  return _input.split(/\\s+/g).some(input =>\r\n    text.search(formatForSimilarMatch(input)) !== -1)\r\n}\r\n\r\nexport const trim = str => str.length > 40 ? str.slice(0, 36) + '...' : str\r\n\r\nexport const getMarkerCoords = (marker, clickableAreas) => {\r\n  const clickableArea = clickableAreas.find(({ location }) => marker === location)\r\n  const allX = clickableArea.coords.filter((_, idx) => idx % 2 === 0)\r\n  const allY = clickableArea.coords.filter((_, idx) => idx % 2 !== 0)\r\n  const minX = Math.min(...allX)\r\n  const minY = Math.min(...allY)\r\n  const maxX = Math.max(...allX)\r\n  const maxY = Math.max(...allY)\r\n  const x = (minX + maxX) / 2\r\n  const y = (minY + maxY) / 2\r\n  return [x, y]\r\n}\r\n","import { DEFAULT_ADD_FAVORITE, DEFAULT_REMOVE_FAVORITE, DEFAULT_GET_FAVORITES, DEFAULT_GUIDE } from './constants'\r\nimport { checkType, roundMinutes, getDay } from './utilities'\r\n\r\nexport const state = {\r\n\r\n  // utilities for synchronous actions after loading state\r\n  _hasFetched: false,\r\n  get hasFetched() { return this._hasFetched },\r\n  set hasFetched(bool) {\r\n    this._hasFetched = bool\r\n    if (bool === false) return false\r\n    this.fetchQueue.forEach(resolve => resolve())\r\n    return true\r\n  },\r\n  fetchQueue: [],\r\n  waitForFetch() {\r\n    return new Promise(resolve => {\r\n      if (this.hasFetched) resolve()\r\n      else this.fetchQueue.push(resolve)\r\n    })\r\n  },\r\n\r\n  // default guide\r\n  guide: DEFAULT_GUIDE,\r\n\r\n  // default favorite functionality\r\n  addFavorite: DEFAULT_ADD_FAVORITE,\r\n  removeFavorite: DEFAULT_REMOVE_FAVORITE,\r\n  getFavorites: DEFAULT_GET_FAVORITES,\r\n\r\n  // get locations from events dynamically\r\n  get locations() {\r\n    const events = this.guide?.events || []\r\n    return [...events.reduce((locations, event) => {\r\n      if (!checkType(event, 'object')) return locations\r\n      if (!checkType(event.location, 'string')) return locations\r\n      locations.add(event.location)\r\n      return locations\r\n    }, new Set())]\r\n  },\r\n\r\n  // get times from events dynamically\r\n  get times() {\r\n    const events = this.guide?.events || []\r\n    const allTimes = [...events.reduce((times, event) => {\r\n      if (!checkType(event, 'object')) return times\r\n      if (!checkType(event.start, ['number', 'date'])) return times\r\n      if (!checkType(event.end, ['number', 'date'])) return times\r\n      times.add(roundMinutes(event.start))\r\n      times.add(roundMinutes(event.end))\r\n      return times\r\n    }, new Set())].sort()\r\n    const earliestTime = new Date(Math.min(...allTimes))\r\n    const latestTime = new Date(Math.max(...allTimes))\r\n    const interval = allTimes.reduce((interval, date) => {\r\n      if (interval !== 15) {\r\n        const minutes = date.getMinutes()\r\n        if (minutes === 30) interval = 30\r\n        if (minutes === 15 || minutes === 45) interval = 15\r\n      }\r\n      return interval\r\n    }, 0)\r\n    const getTimeObject = date => ({\r\n      date,\r\n      timeString: date.toLocaleTimeString('en-US', { timeStyle: 'short' }),\r\n    })\r\n    const getFullDay = time => `${getDay(time.getDay())} ${time.toLocaleDateString()}`\r\n    let days = { [getFullDay(earliestTime)]: [getTimeObject(earliestTime)] }\r\n    let prevTime = earliestTime\r\n    while (prevTime < latestTime) {\r\n      const lastTimeInDay = Math.max(...allTimes.filter(t => t.getDate() === prevTime.getDate()))\r\n      let currentTime = null\r\n      if (lastTimeInDay === Number(prevTime)) {\r\n        currentTime = new Date(allTimes.find(time => time > prevTime))\r\n        days[getFullDay(currentTime)] = [getTimeObject(currentTime)]\r\n      } else {\r\n        currentTime = new Date(prevTime)\r\n        currentTime.setMinutes(currentTime.getMinutes() + interval)\r\n        days[getFullDay(currentTime)].push(getTimeObject(currentTime))\r\n      }\r\n      prevTime = currentTime\r\n    }\r\n    return {\r\n      days,\r\n      interval,\r\n    }\r\n  },\r\n}\r\n","import {\r\n  DEFAULT_FETCH_DATA,\r\n  DEFAULT_EVENT,\r\n  DEFAULT_FLOOR_PLAN,\r\n  DEFAULT_CLICKABLE_AREA,\r\n} from './constants'\r\nimport {\r\n  useCast,\r\n  checkType,\r\n  checkFilterType,\r\n  isObject,\r\n} from './utilities'\r\nimport { state } from './state'\r\n\r\nconst init = async (init = DEFAULT_FETCH_DATA) => {\r\n  const data = await init()\r\n  const { guide } = data\r\n  if (!isObject(data)) throw '`init()` must return an object'\r\n  if (!isObject(guide)) throw 'The `guide` field expects an object'\r\n  if ('events' in guide) {\r\n    if (!checkType(guide.events, 'array')) throw 'The `guide.events` field expects an array'\r\n    const castEvent = useCast(DEFAULT_EVENT, 'event', { start: 'date', end: 'date' })\r\n    state.guide.events = guide.events.map(castEvent)\r\n  }\r\n  if ('floorPlan' in guide) {\r\n    if (!isObject(guide.floorPlan)) throw 'The `guide.floorPlan` field expects an object'\r\n    const castFloorPlan = useCast(DEFAULT_FLOOR_PLAN, 'floor plan')\r\n    const castClickableArea = useCast(DEFAULT_CLICKABLE_AREA, 'clickable area')\r\n    const floorPlan = castFloorPlan(guide.floorPlan)\r\n    state.guide.floorPlan = {\r\n      ...floorPlan,\r\n      clickableAreas: floorPlan.clickableAreas.map(castClickableArea),\r\n    }\r\n  }\r\n  if ('addFavorite' in data) {\r\n    if (!checkType(data.addFavorite, 'function')) throw 'The `addFavorite` field expects a function'\r\n    state.addFavorite = data.addFavorite\r\n  }\r\n  if ('removeFavorite' in data) {\r\n    if (!checkType(data.removeFavorite, 'function')) throw 'The `removeFavorite` field expects a function'\r\n    state.removeFavorite = data.removeFavorite\r\n  }\r\n  if ('getFavorites' in data) {\r\n    if (!checkType(data.getFavorites, 'function')) throw 'The `getFavorites` field expects a function'\r\n    state.getFavorites = data.getFavorites\r\n  }\r\n  state.hasFetched = true\r\n}\r\n\r\nconst getEvents = async (_filters = {}) => {\r\n  await state.waitForFetch()\r\n  if (!isObject(_filters)) throw '`getEvents()` expects an object in the first argument'\r\n  const { include: _include = {}, exclude: _exclude = {} } = _filters\r\n  checkFilterType(_include) // throws if invalid\r\n  checkFilterType(_exclude) // throws if invalid\r\n  const filters = {\r\n    ..._filters,\r\n    include: {\r\n      ..._include,\r\n      after: _include.after ? Number(_include.after) : 0,\r\n      before: _include.before ? Number(_include.before) : Infinity,\r\n    },\r\n    exclude: {\r\n      ..._exclude,\r\n      after: _exclude.after ? Number(_exclude.after) : Infinity,\r\n      before: _exclude.before ? Number(_exclude.before) : 0,\r\n    },\r\n  }\r\n  const { include = {}, exclude = {} } = filters\r\n  return state.guide.events.filter(event => {\r\n    \r\n    // filter within time range\r\n    if (event.start < include.after) return false\r\n    if (event.start > exclude.after) return false\r\n    if (event.end > include.before) return false\r\n    if (event.end < exclude.before) return false\r\n    \r\n    // filter by location\r\n    if ('locations' in include && !contains(include.locations, event.location)) return false\r\n    if ('locations' in exclude && contains(exclude.locations, event.location)) return false\r\n    \r\n    // filter by name\r\n    if ('search' in include && !contains(event.name, include.search)) return false\r\n    if ('search' in exclude && contains(event.name, exclude.search)) return false\r\n\r\n    // if all previous checks pass, keep this event in the array\r\n    return true\r\n  })\r\n}\r\n\r\nconst getLocations = async () => {\r\n  await state.waitForFetch()\r\n  return state.locations\r\n}\r\n\r\nconst getTimes = async () => {\r\n  await state.waitForFetch()\r\n  return state.times\r\n}\r\n\r\nconst getFloorPlan = async () => {\r\n  await state.waitForFetch()\r\n  return state.guide.floorPlan\r\n}\r\n\r\nconst addFavorite = async event => {\r\n  const favorites = await state.addFavorite(event)\r\n  return favorites\r\n}\r\n\r\nconst removeFavorite = async event => {\r\n  const favorites = await state.removeFavorite(event)\r\n  return favorites\r\n}\r\n\r\nconst getFavorites = async () => {\r\n  const favorites = await state.getFavorites()\r\n  return favorites\r\n}\r\n\r\nexport {\r\n  init,\r\n  addFavorite,\r\n  removeFavorite,\r\n  getFavorites,\r\n  getEvents,\r\n  getLocations,\r\n  getTimes,\r\n  getFloorPlan,\r\n}\r\n","import { WholeNumber } from '../../utilities'\r\n\r\n// converts dates to actual `Date()` objects\r\nexport const getActiveEvent = event => ({\r\n  ...event,\r\n  start: new Date(event.start),\r\n  end: new Date(event.end),\r\n})\r\n\r\n\r\n// gets all data needed for one cell, so the logic doesn't clutter the template\r\nexport const getCellData = ({ events, spanState, date, interval, _location, currentTime }) => {\r\n\r\n  // find an event starting at this time\r\n  const _event = events.find(e =>\r\n    Number(e.start) === Number(date)\r\n    && e.location === _location\r\n  )\r\n\r\n  // handle events that already started before the start time\r\n  const event = !_event\r\n    ? events.find(e =>\r\n        Number(e.end) > Number(date)\r\n        && Number(e.start) < Number(currentTime)\r\n        && e.location === _location\r\n      )\r\n    : _event\r\n\r\n  const hasStarted = event ? event.start < currentTime : false\r\n  const eventName = event ? event.name : ''\r\n  const cellType = event ? 'data' : 'data-empty'\r\n  const getStart = event => hasStarted ? currentTime : event.start\r\n  const duration = event ? WholeNumber((event.end - getStart(event)) / 1000 / 60) : 0\r\n  const span = duration ? WholeNumber(duration / interval) : 1\r\n  const blank = spanState[_location] > 0\r\n\r\n  // handle spanState to prevent extra columns\r\n  if (blank) --spanState[_location]\r\n  else if (span > 1) spanState[_location] = span - 1\r\n\r\n  // return all necessary information included in the template\r\n  return { eventName, cellType, span, blank, event, hasStarted }\r\n}\r\n","import { dialog, floorPlan, icons, mobile, search, table, theme } from './styles'\r\n\r\n\r\nexport const getStyles = breakpoint => /* css */`\r\n${theme}\r\n${search}\r\n${table}\r\n${icons}\r\n${dialog}\r\n${floorPlan}\r\n\r\n/* apply mobiles styles within the provided breakpoint */\r\n@media (max-width: ${breakpoint}) {\r\n  ${mobile}\r\n}\r\n`\r\n","import { DEFAULT_BREAKPOINT, DEFAULT_TIMES } from '../../../constants'\r\nimport { mapString, runMethod } from '../../../utilities'\r\n\r\nconst renderSortDialog = ({ locations, times, activeDay, activeTime: _activeTime }, breakpoint = DEFAULT_BREAKPOINT) => {\r\n\r\n  // only show location list if the columns are collapsed\r\n  const beyondThreshold = !window.matchMedia(`(max-width: ${breakpoint})`).matches\r\n  const { days, interval } = times || DEFAULT_TIMES\r\n  const getTimeValue = date => date.toLocaleTimeString([], { hour12: false, timeStyle: 'short' })\r\n  const activeTime = getTimeValue(_activeTime)\r\n  const currentTimes = days[activeDay]\r\n  const minTime = getTimeValue(currentTimes[0].date)\r\n  const maxTime = getTimeValue(currentTimes[currentTimes.length - 1].date)\r\n  const step = interval * 60\r\n\r\n  return /* html */`\r\n    <section class=\"pg-dialog-body\">\r\n      <header class=\"pg-dialog-header\">\r\n        <h1 class=\"pg-dialog-title\">Options</h1>\r\n        <button class=\"pg-dialog-close\" title=\"Close\" onclick=\"${runMethod('toggleSortDialog', false)}\"><i class=\"pg-close-icon\" title=\"Close\"></i></button>\r\n      </header>\r\n      <section class=\"pg-dialog-content\">\r\n        <menu class=\"pg-dialog-menu\">\r\n          <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'favorites')}\">\r\n            <i class=\"pg-favorite-icon\" title=\"View Favorites\">&starf;</i>\r\n            <span>View Favorites</span>\r\n          </button>\r\n        </menu>\r\n        <menu class=\"pg-dialog-menu\">\r\n          <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('showFloorPlan', 'none')}\">\r\n            <span>View Floor Plan</span>\r\n          </button>\r\n        </menu>\r\n        <menu class=\"pg-dialog-menu\">\r\n          <h2 class=\"pg-dialog-menu-title\">Which day?</h2>\r\n          <select class=\"pg-dialog-select\" onchange=\"${runMethod('selectActiveDay')}\">\r\n            ${mapString(Object.keys(days), day => /* html */`\r\n              <option value=\"${day}\" ${day === activeDay ? 'selected' : ''}>${day}</option>\r\n            `)}\r\n          </select>\r\n        </menu>\r\n        <menu class=\"pg-dialog-menu\">\r\n          <h2 class=\"pg-dialog-menu-title\">Filter by Time</h2>\r\n          <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'allTime')}\" autofocus>All Times This Day</button>\r\n          <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'now')}\">Right Now &amp; Onward</button>\r\n          <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'nowOnly')}\">Right Now Only</button>\r\n          <div class=\"pg-dialog-menu-special-item\">\r\n            <div class=\"pg-dialog-menu-item pg-dialog-menu-item--input\">\r\n              <input\r\n                type=\"time\"\r\n                class=\"pg-dialog-menu-input pg-dialog-menu-input--time\"\r\n                value=\"${activeTime}\"\r\n                min=\"${minTime}\"\r\n                max=\"${maxTime}\"\r\n                step=\"${step}\"\r\n                onchange=\"${runMethod('selectActiveTime')}\"\r\n              />\r\n              <span class=\"pg-inline-text\">&amp; On</span>\r\n            </div>\r\n            <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'time')}\">Go &roarr;</button>\r\n          </div>\r\n        </menu>\r\n        <menu class=\"pg-dialog-menu\">\r\n          <h2 class=\"pg-dialog-menu-title\">Filter by Location</h2>\r\n          ${beyondThreshold\r\n            ? /* html */`<button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'location')}\">All Locations</button>`\r\n            : mapString(locations, _location => /* html */`\r\n              <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectActiveLocation', _location)}\">${_location}</button>\r\n            `)\r\n          }\r\n        </menu>\r\n      </section>\r\n    </section>\r\n  `\r\n}\r\n\r\nexport default renderSortDialog\r\n","import { mapString, runMethod } from '../../../utilities'\r\n\r\nconst renderEventDialog = ({ favorites, activeEvent, sortBy }) => {\r\n\r\n  const existingFavorite = favorites.find(({ location: _location, start, name }) => {\r\n    const { location: aLocation, start: aStart, name: aName } = activeEvent\r\n    return _location === aLocation && Number(new Date(start)) === Number(aStart) && name === aName\r\n  })\r\n  const favoriteMethod = existingFavorite ? 'removeFavorite' : 'addFavorite'\r\n  const favoriteText = existingFavorite ? 'Remove from Favorites' : 'Add to Favorites'\r\n\r\n  return /* html */`\r\n    <article class=\"pg-dialog-body\">\r\n      <header class=\"pg-dialog-header\">\r\n        <h1 class=\"pg-dialog-title\">${activeEvent.name}</h1>\r\n        <button class=\"pg-dialog-close\" onclick=\"${runMethod('closeEventDialog')}\"><i class=\"pg-close-icon\" title=\"Close\"></i></button>\r\n      </header>\r\n      <section class=\"pg-dialog-content pg-dialog-content--text-container\">\r\n        ${mapString(activeEvent.description.split(/\\n/), paragraph => /* html */`\r\n          <p class=\"pg-dialog-paragraph\">${paragraph}</p>\r\n        `)}\r\n      </section>\r\n      <footer class=\"pg-dialog-footer\">\r\n        <time datetime=\"${activeEvent.start.toISOString()}\" class=\"pg-time pg-time--start\">\r\n          ${activeEvent.start.toLocaleTimeString('en-US', { timeStyle: 'short' })}\r\n        </time>\r\n        to\r\n        <time datetime=\"${activeEvent.end.toISOString()}\" class=\"pg-time pg-time--end\">\r\n          ${activeEvent.end.toLocaleTimeString('en-US', { timeStyle: 'short' })}\r\n        </time>\r\n        <div>@ ${activeEvent.location}</div>\r\n        <div class=\"pg-dialog-details\">\r\n          <div><strong>Hosted by:</strong> <span>${activeEvent.host}</span></div>\r\n          <div><strong>Category:</strong> <span>${activeEvent.category}</span></div>\r\n        </div>\r\n      </footer>\r\n      <section class=\"pg-dialog-content\">\r\n        <menu class=\"pg-dialog-menu\">\r\n          <button class=\"pg-dialog-menu-item\" onclick=\"${runMethod(favoriteMethod, activeEvent)}\" autofocus>\r\n            <span>${favoriteText}</span>\r\n            <i class=\"pg-favorite-icon\" title=\"${favoriteText}\">&starf;</i>\r\n          </button>\r\n          ${sortBy === 'favorites'\r\n            ? ''\r\n            : /* html */\r\n              `<button class=\"pg-dialog-menu-item\" onclick=\"${runMethod('selectSortBy', 'favorites')}\" autofocus>\r\n                <span>View All Favorites</span>\r\n                <i class=\"pg-favorite-icon\" title=\"View All Favorites\">&starf;</i>\r\n              </button>`\r\n          }\r\n        </menu>\r\n      </section>\r\n    </article>\r\n  `\r\n}\r\n\r\nexport default renderEventDialog\r\n","import { DEFAULT_TIMES } from '../../../constants'\r\nimport { getEventId, mapString, runMethod, trim } from '../../../utilities'\r\nimport { getCellData } from '../componentUtils'\r\n\r\nconst renderByLocation = ({ activeLocation, events, times: allTimes, locations, activeDay, marker }) => {\r\n\r\n  const { days, interval } = allTimes || DEFAULT_TIMES\r\n\r\n  // this keeps rowspans from previous iterations in memory\r\n  // so we can avoid adding extra table cells.\r\n  const spanState = {}\r\n\r\n  // utility to check if the given location is active and return the class accordingly\r\n  const getActiveClass = (_location, className) => activeLocation === _location ? className : ''\r\n  const getMarkerClass = (_location, className) => marker === _location ? className : ''\r\n\r\n  // get all the times in the current day\r\n  const times = days[activeDay]\r\n\r\n  return /* html */`\r\n    <div class=\"pg-table-wrapper\">\r\n      <table class=\"pg-table\">\r\n        <thead class=\"pg-header\">\r\n          <tr class=\"pg-row\">\r\n            <td class=\"pg-cell-wrapper pg-cell-wrapper--corner\" onclick=\"${runMethod('toggleSortDialog', true)}\">\r\n              <div class=\"pg-cell pg-cell--corner\"><i class=\"pg-more-icon\" title=\"Options...\"></i> <span class=\"pg-corner-text\">${activeDay}</span></div>\r\n            </td>\r\n            ${mapString(locations, _location => /* html */`\r\n              <th\r\n                class=\"\r\n                  pg-cell-wrapper\r\n                  pg-cell-wrapper--column-header\r\n                  pg-cell-wrapper--column-header-location\r\n                  ${getActiveClass(_location, 'pg-cell-wrapper--column-header-active')}\r\n                  ${getMarkerClass(_location, 'pg-cell-wrapper--column-header-active-location')}\r\n                \"\r\n                onclick=\"${runMethod('showFloorPlan', _location)}\"\r\n              >\r\n                <div class=\"pg-cell pg-cell--column-header ${getActiveClass(_location, 'pg-cell--column-header-active')}\">\r\n                  <i class=\"pg-map-icon\"></i>\r\n                  <span class=\"pg-inline-text\">${_location}</span>\r\n                </div>\r\n              </th>\r\n            `)}\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"pg-body\">\r\n          ${mapString(times, ({ date, timeString }) => /* html */`\r\n            <tr class=\"pg-row\">\r\n              <th class=\"pg-cell-wrapper pg-cell-wrapper--row-header\">\r\n                <div class=\"pg-cell pg-cell--row-header\">${timeString}</div>\r\n              </th>\r\n              ${mapString(locations, _location => {\r\n                const { eventName, cellType, span, blank, event } = getCellData({ events, spanState, date, interval, _location })\r\n                if (blank) return '' // blank if cell from previous row occupies this space\r\n                return /* html */`\r\n                  <td\r\n                    class=\"pg-cell-wrapper pg-cell-wrapper--${cellType} ${getActiveClass(_location, `pg-cell-wrapper--${cellType}-active`)}\"\r\n                    rowspan=\"${span}\"\r\n                    id=\"${event ? getEventId(event) : ''}\"\r\n                    ${event ? `onclick=\"${runMethod('openEventDialog', event)}\"` : ''}\r\n                  >\r\n                    <div class=\"pg-cell pg-cell--${cellType} ${getActiveClass(_location, `pg-cell--${cellType}-active`)}\">${trim(eventName)}</div>\r\n                  </td>\r\n                `\r\n              })}\r\n            </tr>\r\n          `)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default renderByLocation\r\n","import { DEFAULT_TIMES } from '../../../constants'\r\nimport { getDateInfo, getEventId, mapString, roundMinutes, runMethod, trim } from '../../../utilities'\r\nimport { getCellData } from '../componentUtils'\r\n\r\nconst renderByTime = ({ events, times: allTimes, locations, sortBy, activeTime, activeDay }) => {\r\n\r\n  const { days, interval } = allTimes || DEFAULT_TIMES\r\n\r\n  // this keeps colspans from previous iterations in memory\r\n  // so we can avoid adding extra table cells.\r\n  const spanState = {}\r\n\r\n  // determine how to filter times\r\n  const _times = days[activeDay]\r\n  const now = roundMinutes(Date.now(), interval)\r\n  const { day: nowDay, date: nowDate, time: nowTime } = getDateInfo(now)\r\n  const filterMap = {\r\n    now: _times.filter(({ date }) => date >= now),\r\n    nowOnly: _times.filter(({ date }) => date === now),\r\n    time: _times.filter(({ date }) => date >= activeTime),\r\n    allTime: _times,\r\n  }\r\n  const filteredTimes = filterMap[sortBy]\r\n  const times = filteredTimes.length ? filteredTimes : [{ date: now, timeString: nowTime }]\r\n  const currentDay = filteredTimes.length ? activeDay : `${nowDay} ${nowDate}`\r\n  const timeMap = {\r\n    now,\r\n    nowOnly: now,\r\n    time: activeTime,\r\n    allTime: new Date(0),\r\n  }\r\n  const currentTime = timeMap[sortBy]\r\n\r\n  return /* html */`\r\n    <div class=\"pg-table-wrapper\">\r\n      <table class=\"pg-table\">\r\n        <thead class=\"pg-header\">\r\n          <tr class=\"pg-row\">\r\n            <td class=\"pg-cell-wrapper pg-cell-wrapper--corner pg-cell-wrapper--corner-collapsed\" onclick=\"${runMethod('toggleSortDialog', true)}\">\r\n              <div class=\"pg-cell pg-cell--corner\"><i class=\"pg-more-icon\" title=\"Options...\"></i> <span class=\"pg-corner-text\">${currentDay}</span></div>\r\n            </td>\r\n            ${mapString(times, ({ date, timeString }) => /* html */`\r\n              <th class=\"pg-cell-wrapper pg-cell-wrapper--column-header pg-cell-wrapper--column-header-time ${date === now ? 'pg-cell-wrapper--column-header-active-time' : ''}\">\r\n                <div class=\"pg-cell pg-cell--column-header pg-cell--column-header-time\">\r\n                  <span>${timeString}</span>\r\n                  <div>${date === now ? '(Current Time)' : ''}</div>\r\n                </div>\r\n              </th>\r\n            `)}\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"pg-body\">\r\n          ${mapString(locations, _location => /* html */`\r\n            <tr class=\"pg-row\">\r\n              <th class=\"pg-cell-wrapper pg-cell-wrapper--row-header pg-cell-wrapper--row-header-${sortBy === 'nowOnly' ? 'now' : 'time'} pg-cell-wrapper--row-header-collapsed\" onclick=\"${runMethod('toggleHeaders')}\">\r\n                <div class=\"pg-cell pg-cell--row-header\" onclick=\"${runMethod('showFloorPlan', _location)}\">\r\n                  <i class=\"pg-map-icon\"></i>\r\n                  <span class=\"pg-inline-text\">${_location}</span>\r\n                </div>\r\n              </th>\r\n              ${mapString(times, ({ date }) => {\r\n                const { eventName, cellType, span, blank, event, hasStarted } = getCellData({ events, spanState, date, interval, _location, currentTime })\r\n                if (blank) return '' // blank if cell from previous row occupies this space\r\n                return /* html */`\r\n                  <td\r\n                    class=\"pg-cell-wrapper pg-cell-wrapper--${cellType} pg-cell-wrapper--${cellType}-${sortBy === 'nowOnly' ? 'now' : 'time'} ${hasStarted ? 'pg-cell-wrapper--overflow' : ''}\"\r\n                    colspan=\"${span}\"\r\n                    id=\"${event ? getEventId(event) : ''}\"\r\n                    ${event ? `onclick=\"${runMethod('openEventDialog', event)}\"` : ''}\r\n                  >\r\n                    <div class=\"pg-cell pg-cell--${cellType} pg-cell--${cellType}-${sortBy === 'nowOnly' ? 'now' : 'time'}\">${trim(eventName)}</div>\r\n                  </td>\r\n                `\r\n              })}\r\n            </tr>\r\n          `)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default renderByTime\r\n","import { mapString, runMethod, getDateInfo, trim } from '../../../utilities'\r\n\r\nconst renderFavorites = ({ favorites }) => /* html */`\r\n  <div class=\"pg-table-wrapper\">\r\n    <table class=\"pg-table\">\r\n      <thead class=\"pg-header\">\r\n        <tr class=\"pg-row\">\r\n          <td class=\"pg-cell-wrapper pg-cell-wrapper--corner\" onclick=\"${runMethod('toggleSortDialog', true)}\">\r\n            <div class=\"pg-cell pg-cell--corner\"><i class=\"pg-more-icon\" title=\"Options...\"></i> Favorites</div>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody class=\"pg-body\">\r\n        ${favorites.length === 0\r\n          ? /* html */`\r\n              <tr class=\"pg-row\">\r\n                <td class=\"pg-cell-wrapper pg-cell-wrapper--data pg-cell-wrapper--data-favorite\">\r\n                  <div class=\"pg-cell pg-cell--data pg-cell--data-favorite\">You have no favorites.</div>\r\n                </td>\r\n              </tr>\r\n            `\r\n          : mapString(favorites, event => {\r\n            const { start, end, name, location } = event\r\n            const startDate = getDateInfo(start)\r\n            const endDate = getDateInfo(end)\r\n            const day = `${startDate.day} ${startDate.date}`\r\n            const startTime = startDate.time\r\n            const endTime = endDate.time\r\n            return /* html */`\r\n              <tr class=\"pg-row\">\r\n                <td class=\"pg-cell-wrapper pg-cell-wrapper--data pg-cell-wrapper--data-favorite\" onclick=\"${runMethod('openEventDialog', event)}\">\r\n                  <div class=\"pg-cell pg-cell--data pg-cell--data-favorite\">\r\n                    <span class=\"pg-search-result-name\">${trim(name)}</span>\r\n                    <span class=\"pg-inline-result-details\">${day}</span>\r\n                    <span class=\"pg-search-result-details\">\r\n                      <span class=\"pg-inline-text\">${startTime}</span>\r\n                      <span class=\"pg-inline-text\">- ${endTime}</span>\r\n                      <span class=\"pg-inline-text\"> @ ${location}</span>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            `\r\n          })\r\n        }\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n`\r\n\r\nexport default renderFavorites\r\n","import { getDateInfo, mapString, runMethod, trim } from '../../../utilities'\r\n\r\nconst renderSearchResults = ({ searchResults }) => /* html */`\r\n  <div class=\"pg-table-wrapper\">\r\n    <table class=\"pg-table\">\r\n      <thead class=\"pg-header\">\r\n        <tr class=\"pg-row\">\r\n          <td class=\"pg-cell-wrapper pg-cell-wrapper--corner\" onclick=\"${runMethod('toggleSortDialog', true)}\">\r\n            <div class=\"pg-cell pg-cell--corner\"><i class=\"pg-more-icon\" title=\"Options...\"></i> Search Results</div>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody class=\"pg-body\">\r\n        ${searchResults.length === 0\r\n          ? /* html */`\r\n              <tr class=\"pg-row\">\r\n                <td class=\"pg-cell-wrapper pg-cell-wrapper--data pg-cell-wrapper--data-search\">\r\n                  <div class=\"pg-cell pg-cell--data pg-cell--data-search\">No results found.</div>\r\n                </td>\r\n              </tr>\r\n            `\r\n          : mapString(searchResults, event => {\r\n            const { start, end, name, location } = event\r\n            const startDate = getDateInfo(start)\r\n            const endDate = getDateInfo(end)\r\n            const day = `${startDate.day} ${startDate.date}`\r\n            const startTime = startDate.time\r\n            const endTime = endDate.time\r\n            return /* html */`\r\n              <tr class=\"pg-row\">\r\n                <td class=\"pg-cell-wrapper pg-cell-wrapper--data pg-cell-wrapper--data-search\" onclick=\"${runMethod('openEventDialog', event)}\">\r\n                  <div class=\"pg-cell pg-cell--data pg-cell--data-search\">\r\n                    <span class=\"pg-search-result-name\">${trim(name)}</span>\r\n                    <span class=\"pg-inline-result-details\">${day}</span>\r\n                    <span class=\"pg-search-result-details\">\r\n                      <span class=\"pg-inline-text\">${startTime}</span>\r\n                      <span class=\"pg-inline-text\">- ${endTime}</span>\r\n                      <span class=\"pg-inline-text\"> @ ${location}</span>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            `\r\n          })\r\n        }\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n`\r\n\r\nexport default renderSearchResults\r\n","import { mapString, runMethod, getMarkerCoords } from '../../../utilities'\r\n\r\nconst renderFloorPlan = ({ floorPlan, floorPlanInteractive, marker }) => {\r\n  const { title, clickableAreas, dimensions } = floorPlan\r\n  const { height, width } = dimensions\r\n  const showMap = clickableAreas.length > 0 && floorPlanInteractive\r\n  const markerCoords = marker !== 'none' ? getMarkerCoords(marker, clickableAreas) : []\r\n  const [x, y] = markerCoords\r\n\r\n  return /* html */`\r\n    <div class=\"pg-floor-plan-wrapper\">\r\n      <header class=\"pg-floor-plan-header\">\r\n        <button class=\"pg-floor-plan-menu-button\" onclick=\"${runMethod('toggleSortDialog', true)}\">\r\n          <i class=\"pg-more-icon\" title=\"Options...\"></i>\r\n        </button>\r\n        <h1 class=\"pg-floor-plan-title\">${title}</h1>\r\n      </header>\r\n      <div class=\"pg-floor-plan-container\">\r\n        <menu class=\"pg-floor-plan-menu\">\r\n          <button class=\"pg-floor-plan-interactive-button\" onclick=\"${runMethod('toggleFloorPlanInteractive', null)}\">\r\n            <i class=\"pg-search-icon\"></i> ${floorPlanInteractive ? 'Fit to Screen' : 'Original Size'}\r\n          </button>\r\n          ${clickableAreas.length > 0\r\n            ? (floorPlanInteractive\r\n                ? /* html */`<span class=\"pg-inline-text\">Select an area for details.</span>`\r\n                : /* html */`<span class=\"pg-inline-text\">View original size for more actions.</span>`\r\n              )\r\n            : ''\r\n          }\r\n        </menu>\r\n\r\n        ${showMap\r\n          ? /* html */`\r\n            <map name=\"floorPlan\">\r\n              ${mapString(clickableAreas, ({ shape, coords, href, alt, location: _location }) => {\r\n                const fullHref = href.startsWith(':') ? `http${href}`\r\n                  : href.startsWith('//') ? `http:${href}`\r\n                  : href\r\n                const isExternalLink = fullHref.startsWith('http')\r\n                  && new URL(fullHref).hostname !== location.hostname\r\n                return /* html */`\r\n                  <area\r\n                    shape=\"${shape}\"\r\n                    coords=\"${coords.join(',')}\"\r\n                    href=\"${href}\"\r\n                    ${isExternalLink ? `\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    ` : ''\r\n                    }\r\n                    alt=\"${alt ?? _location}\"\r\n                  />\r\n                `\r\n              })}\r\n            </map>`\r\n          : ''\r\n        }\r\n\r\n        <div class=\"pg-floor-plan-image-wrapper ${showMap ? 'pg-floor-plan-image-wrapper--interactive' : ''}\">\r\n          <!-- This gets replaced by the image element stored in memory for optimization -->\r\n          <img class=\"pg-floor-plan-image\" height=\"${height}\" width=\"${width}\" />\r\n          ${x && y && showMap\r\n            ? /* html */`\r\n              <div class=\"pg-floor-plan-marker\" style=\"--x: ${x}; --y: ${y}\">\r\n                <i class=\"pg-map-icon\"></i>\r\n              </div>`\r\n            : ''\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport default renderFloorPlan\r\n","// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n\n/**\n * Dispatches the passed event to both an \"on<type>\" handler as well as via the\n * normal dispatch operation. Does not bubble.\n *\n * @param {!EventTarget} target\n * @param {!Event} event\n * @return {boolean}\n */\nfunction safeDispatchEvent(target, event) {\n  var check = 'on' + event.type.toLowerCase();\n  if (typeof target[check] === 'function') {\n    target[check](event);\n  }\n  return target.dispatchEvent(event);\n}\n\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n    var invalid = function(k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n\n    if (s.opacity < 1 ||\n        invalid('zIndex', 'auto') ||\n        invalid('transform', 'none') ||\n        invalid('mixBlendMode', 'normal') ||\n        invalid('filter', 'none') ||\n        invalid('perspective', 'none') ||\n        s['isolation'] === 'isolate' ||\n        s.position === 'fixed' ||\n        s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n    el = el.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return /** @type {HTMLDialogElement} */ (el);\n    }\n    if (el.parentElement) {\n      el = el.parentElement;\n    } else if (el.parentNode) {\n      el = el.parentNode.host;\n    } else {\n      el = null;\n    }\n  }\n  return null;\n}\n\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\nfunction safeBlur(el) {\n  // Find the actual focused element when the active element is inside a shadow root\n  while (el && el.shadowRoot && el.shadowRoot.activeElement) {\n    el = el.shadowRoot.activeElement;\n  }\n\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n\n/**\n * @param {!DocumentFragment|!Element} hostElement\n * @return {?Element}\n */\nfunction findFocusableElementWithin(hostElement) {\n  // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n  // alternative involves stepping through and trying to focus everything.\n  var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n  var query = opts.map(function(el) {\n    return el + ':not([disabled])';\n  });\n  // TODO(samthor): tabindex values that are not numeric are not focusable.\n  query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n  var target = hostElement.querySelector(query.join(', '));\n\n  if (!target && 'attachShadow' in Element.prototype) {\n    // If we haven't found a focusable target, see if the host element contains an element\n    // which has a shadowRoot.\n    // Recursively search for the first focusable item in shadow roots.\n    var elems = hostElement.querySelectorAll('*');\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].tagName && elems[i].shadowRoot) {\n        target = findFocusableElementWithin(elems[i].shadowRoot);\n        if (target) {\n          break;\n        }\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Determines if an element is attached to the DOM.\n * @param {Element} element to check\n * @return {boolean} whether the element is in DOM\n */\nfunction isConnected(element) {\n  return element.isConnected || document.body.contains(element);\n}\n\n/**\n * @param {!Event} event\n * @return {?Element}\n */\nfunction findFormSubmitter(event) {\n  if (event.submitter) {\n    return event.submitter;\n  }\n\n  var form = event.target;\n  if (!(form instanceof HTMLFormElement)) {\n    return null;\n  }\n\n  var submitter = dialogPolyfill.formSubmitter;\n  if (!submitter) {\n    var target = event.target;\n    var root = ('getRootNode' in target && target.getRootNode() || document);\n    submitter = root.activeElement;\n  }\n\n  if (!submitter || submitter.form !== form) {\n    return null;\n  }\n  return submitter;\n}\n\n/**\n * @param {!Event} event\n */\nfunction maybeHandleSubmit(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n  var form = /** @type {!HTMLFormElement} */ (event.target);\n\n  // We'd have a value if we clicked on an imagemap.\n  var value = dialogPolyfill.imagemapUseValue;\n  var submitter = findFormSubmitter(event);\n  if (value === null && submitter) {\n    value = submitter.value;\n  }\n\n  // There should always be a dialog as this handler is added specifically on them, but check just\n  // in case.\n  var dialog = findNearestDialog(form);\n  if (!dialog) {\n    return;\n  }\n\n  // Prefer formmethod on the button.\n  var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n  if (formmethod !== 'dialog') {\n    return;\n  }\n  event.preventDefault();\n\n  if (value != null) {\n    // nb. we explicitly check against null/undefined\n    dialog.close(value);\n  } else {\n    dialog.close();\n  }\n}\n\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false;\n\n  // Set a11y role. Browsers that support dialog implicitly know this already.\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n\n  dialog.addEventListener('submit', maybeHandleSubmit, false);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n    var cb = function() {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n    var timeout;\n    var delayModel = function(ev) {\n      if (ev.target !== dialog) { return; }  // not for a child element\n      var cand = 'DOMNodeRemoved';\n      removed |= (ev.type.substr(0, cand.length) === cand);\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  }\n  // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('mouseup'  , this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('mousedown', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('click'    , this.backdropMouseEvent_.bind(this));\n}\n\ndialogPolyfillInfo.prototype = /** @type {HTMLDialogElement.prototype} */ ({\n\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function() {\n    if (this.dialog_.hasAttribute('open') && isConnected(this.dialog_)) { return; }\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function() {\n    if (!this.openAsModal_) { return; }\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = '';\n\n    // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    }\n\n    // Clear the backdrop and remove from the manager.\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function(value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal();  // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles mouse events ('mouseup', 'mousedown', 'click') on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropMouseEvent_: function(e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n        e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n        e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function() {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n    if (!target) {\n      target = findFocusableElementWithin(this.dialog_);\n    }\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function(dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function() {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function() {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n    if (!isConnected(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' +\n          'This may cause it to be unusable. For more information, see this link: ' +\n          'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true;\n\n    // Optionally center vertically, relative to the current viewport.\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    }\n\n    // Insert backdrop.\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n    // Focus on whatever inside the dialog.\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function(opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n    this.setOpen(false);\n\n    // Leave returnValue untouched in case it was set directly on the element\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    }\n\n    // Triggering \"close\" event for any attached listeners on the <dialog>.\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    safeDispatchEvent(this.dialog_, closeEvent);\n  }\n\n});\n\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function(element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null;\n    // Some browsers throw on cssRules.\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n    if (!cssRules) { continue; }\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null;\n      // Ignore errors on invalid selector texts.\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch(e) {}\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n      if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndialogPolyfill.needsCentering = function(dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  }\n\n  // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n  if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n      (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n    return false;\n  }\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n\n/**\n * @param {!Element} element to force upgrade\n */\ndialogPolyfill.forceRegisterDialog = function(element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' +\n        'may not work correctly', element);\n  }\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n  new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n};\n\n/**\n * @param {!Element} element to upgrade, if necessary\n */\ndialogPolyfill.registerDialog = function(element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n\n/**\n * @constructor\n */\ndialogPolyfill.DialogManager = function() {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n\n  var checkDOM = this.checkDOM_.bind(this);\n\n  // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function(e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]);  // sanity-check DOM\n  }.bind(this));\n\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function(records) {\n      var removed = [];\n      records.forEach(function(rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\ndialogPolyfill.DialogManager.prototype.blockDocument = function() {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n};\n\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\ndialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n\n/**\n * Updates the stacking of all known dialogs.\n */\ndialogPolyfill.DialogManager.prototype.updateStacking = function() {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  }\n\n  // Make the overlay a sibling of the dialog itself.\n  var last = this.pendingDialogStack[0];\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0;  // only valid if top-most\n      }\n    }\n    candidate = candidate.parentElement;\n  }\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n  var target = event.composedPath ? event.composedPath()[0] : event.target;\n\n  if (this.containedByTopDialog_(target)) { return; }\n\n  if (document.activeElement === document.documentElement) { return; }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(/** @type {Element} */ (target));\n\n  if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(target);\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n  this.forwardTab_ = undefined;\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n    if (dpi && safeDispatchEvent(dpi.dialog, cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function(dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\ndialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n  this.updateStacking();\n  return true;\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\ndialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n  if (index === -1) { return; }\n\n  this.pendingDialogStack.splice(index, 1);\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.imagemapUseValue = null;\n\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\nif (window.HTMLDialogElement === undefined) {\n\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n      methodDescriptor.get = function() {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n        return realGet.call(this);\n      };\n      var realSet = methodDescriptor.set;\n      /** @this {HTMLElement} */\n      methodDescriptor.set = function(v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n        return realSet.call(this, v);\n      };\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n  document.addEventListener('click', function(ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.imagemapUseValue = null;\n    if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n    var target = /** @type {Element} */ (ev.target);\n    if ('composedPath' in ev) {\n      var path = ev.composedPath();\n      target = path.shift() || target;\n    }\n    if (!target || !isFormMethodDialog(target.form)) { return; }\n\n    var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) { return; }\n      // this is a <input type=\"image\">, which can submit forms\n      dialogPolyfill.imagemapUseValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n    if (!dialog) { return; }\n\n    dialogPolyfill.formSubmitter = target;\n\n  }, false);\n\n  /**\n   * Global 'submit' handler. This handles submits of `method=\"dialog\"` which are invalid, i.e.,\n   * outside a dialog. They get prevented.\n   */\n  document.addEventListener('submit', function(ev) {\n    var form = ev.target;\n    var dialog = findNearestDialog(form);\n    if (dialog) {\n      return;  // ignore, handle there\n    }\n\n    var submitter = findFormSubmitter(ev);\n    var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n    if (formmethod === 'dialog') {\n      ev.preventDefault();\n    }\n  });\n\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n}\n\nexport default dialogPolyfill;\n","import { DEFAULT_BREAKPOINT } from '../../../constants'\r\nimport { getStyles } from '../getStyles'\r\nimport { default as renderSortDialog } from './renderSortDialog'\r\nimport { default as renderEventDialog } from './renderEventDialog'\r\nimport { default as renderByLocation } from './renderByLocation'\r\nimport { default as renderByTime } from './renderByTime'\r\nimport { default as renderFavorites } from './renderFavorites'\r\nimport { default as renderSearchBar } from './renderSearchBar'\r\nimport { default as renderSearchResults } from './renderSearchResults'\r\nimport { default as renderFloorPlan } from './renderFloorPlan'\r\nimport dialogPolyfill from 'dialog-polyfill'\r\nimport { clearHTML } from '../../../utilities'\r\n\r\nconst getRender = ({ state, component }) => async ({ loading } = {}) => {\r\n  const { root, dataset, templateCache } = component\r\n\r\n  // This assures renders happen at the end of the current event loop\r\n  await new Promise(resolve => { setTimeout(() => { resolve() }) })\r\n\r\n  // clear previously rendered content\r\n  clearHTML(root)\r\n\r\n  // get style\r\n  const { css, breakpoint } = dataset\r\n  const style = css || getStyles(breakpoint || DEFAULT_BREAKPOINT)\r\n\r\n  // render loading spinner if necessary\r\n  if (loading) {\r\n    const loadingTemplate = document.createElement('template')\r\n    loadingTemplate.innerHTML = /* html */`\r\n      <style>${style}</style>\r\n      <div class=\"pg-loading\"></div>\r\n    `\r\n    root.appendChild(loadingTemplate.content.cloneNode(true))\r\n    return true // success\r\n  }\r\n\r\n  // determine which render method to use\r\n  const renderMap = {\r\n    location: renderByLocation,\r\n    time: renderByTime,\r\n    allTime: renderByTime,\r\n    now: renderByTime,\r\n    nowOnly: renderByTime,\r\n    favorites: renderFavorites,\r\n    search: renderSearchResults,\r\n  }\r\n  const renderTable = renderMap[state.sortBy]\r\n  const showFloorPlan = state.view === 'floorPlan'\r\n\r\n  // rewrite the template HTML\r\n  const tableTemplate = document.createElement('template')\r\n  tableTemplate.innerHTML = /* html */`\r\n    <style>\r\n      /* typical browser defaults for dialog polyfill */\r\n      dialog + .backdrop { position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(0, 0, 0, 0.1); }\r\n      ${style}\r\n    </style>\r\n    <section id=\"ProgramGuide\">\r\n      ${renderSearchBar(state)}\r\n      ${showFloorPlan\r\n        ? renderFloorPlan(state)\r\n        : renderTable(state)\r\n      }\r\n    </section>\r\n    <dialog class=\"pg-dialog pg-dialog--sort\">${renderSortDialog(state, breakpoint)}</dialog>\r\n    <dialog class=\"pg-dialog pg-dialog--event\">${renderEventDialog(state)}</dialog>\r\n  `\r\n  root.appendChild(tableTemplate.content.cloneNode(true))\r\n\r\n  // register dialogs with the polyfill\r\n  const dialogs = root.querySelectorAll('.pg-dialog')\r\n  for (const dialog of dialogs) dialogPolyfill.registerDialog(dialog)\r\n\r\n  if (state.view === 'guide') {\r\n\r\n    // handle scrolling within the table\r\n    const wrapper = root.querySelector('.pg-table-wrapper')\r\n    const handleScroll = () => {\r\n      const SCROLLED_CLASS = 'pg-table-wrapper--scrolled'\r\n      const needsClass = wrapper.scrollLeft > 0 && !wrapper.classList.contains(SCROLLED_CLASS)\r\n      if (needsClass) wrapper.classList.add(SCROLLED_CLASS)\r\n      if (wrapper.scrollLeft === 0) wrapper.classList.remove(SCROLLED_CLASS)\r\n    }\r\n    wrapper.addEventListener('scroll', handleScroll)\r\n  } else if (state.view === 'floorPlan') {\r\n\r\n    // replace placeholder <img> with the real one stored in memory\r\n    // (this allows the image to load prior to viewing the map, and\r\n    // prevents unnecessary reloading of the image)\r\n    const image = root.querySelector('.pg-floor-plan-image')\r\n    image.replaceWith(templateCache.floorPlanImage)\r\n  }\r\n\r\n  return true // success\r\n}\r\n\r\nexport {\r\n  renderSortDialog,\r\n  renderEventDialog,\r\n  getRender,\r\n}\r\n","import { runMethod } from '../../../utilities'\r\n\r\nconst renderSearchBar = ({ currentSearch }) => /* html */`\r\n  <form class=\"pg-search-bar\" onsubmit=\"${runMethod('search')}\">\r\n    <input class=\"pg-search-input\" onchange=\"${runMethod('changeSearch')}\" placeholder=\"Search events ...\" value=\"${currentSearch}\" />\r\n    <button class=\"pg-search-button\"><i class=\"pg-search-icon\" title=\"Search\"></i></button>\r\n  </form>\r\n`\r\n\r\nexport default renderSearchBar\r\n","import { addFavorite } from '../../../exports'\r\n\r\nexport default ({ state, setState, component }) => async encodedEvent => {\r\n  const { openEventDialog } = component\r\n  const eventJSON = decodeURIComponent(encodedEvent)\r\n  const event = JSON.parse(eventJSON)\r\n  setState({\r\n    favorites: [...state.favorites, event],\r\n  }, {\r\n    render: false,\r\n  })\r\n  openEventDialog(encodedEvent) // update the event modal\r\n  return await addFavorite(event)\r\n}\r\n","import { removeFavorite } from '../../../exports'\r\n\r\nexport default ({ state, setState, component }) => async encodedEvent => {\r\n  const { openEventDialog } = component\r\n  const eventJSON = decodeURIComponent(encodedEvent)\r\n  const event = JSON.parse(eventJSON)\r\n  const removeIndex = state.favorites.findIndex(({ location: _location, start, name }) => {\r\n    const { location: cLocation, start: cStart, name: cName } = event\r\n    return _location === cLocation && start === cStart && name === cName\r\n  })\r\n  const favorites = [...state.favorites]\r\n  favorites.splice(removeIndex, 1)\r\n  if (state.sortBy === 'favorites') {\r\n    setState({ favorites })\r\n  } else {\r\n    setState({ favorites }, { render: false })\r\n    openEventDialog(encodedEvent) // update the event modal\r\n  }\r\n  return await removeFavorite(event)\r\n}\r\n","export default ({ component }) => event => {\r\n  const { toggleSortDialog, closeEventDialog } = component\r\n  if (event.key === 'Esc' || event.key === 'Escape') {\r\n    event.preventDefault()\r\n    toggleSortDialog(false)\r\n    closeEventDialog()\r\n  }\r\n}\r\n","export default ({ setState, component }) => () => {\r\n  const { root } = component\r\n\r\n  // a little extra insurance to avoid conflicts with other code...\r\n  const hash = location.hash.replace('#', '')\r\n  if (!hash.startsWith('View-Location-')) return\r\n\r\n  // navigate to location view\r\n  const _location = hash.replace('View-Location-', '').replace('-', ' ')\r\n  setState({\r\n    activeLocation: _location,\r\n    marker: _location,\r\n    view: 'guide',\r\n    sortBy: 'location',\r\n  })\r\n\r\n  // reset the hash so the navigation can be used more than once in a row\r\n  history.replaceState({}, '', location.href.replace(/#.+/, ''))\r\n\r\n  // scroll location into view if necessary\r\n  const activeLocationEl = root.querySelector('pg-cell-wrapper--column-header-active-location')\r\n  if (activeLocationEl) activeLocationEl.scrollIntoView()\r\n}\r\n","export default ({ setState, component }) => locationName => {\r\n  const { toggleFloorPlanInteractive } = component\r\n  setState({\r\n    marker: locationName,\r\n    view: 'floorPlan',\r\n  })\r\n  toggleFloorPlanInteractive(locationName !== 'none')\r\n}\r\n","export default ({ state, setState, component }) => _bool => {\r\n  const { templateCache } = component\r\n  const bool = _bool ?? !state.floorPlanInteractive\r\n  const floorPlanInteractive = bool\r\n  const { floorPlan } = state\r\n  const { floorPlanImage } = templateCache\r\n  const INTERACTIVE_CLASS = 'pg-floor-plan-image--interactive'\r\n  const addOrRemove = floorPlanInteractive ? 'add' : 'remove'\r\n  floorPlanImage.classList[addOrRemove](INTERACTIVE_CLASS)\r\n  if (floorPlan.clickableAreas.length > 0) {\r\n    if (floorPlanInteractive) floorPlanImage.setAttribute('usemap', '#floorPlan')\r\n    else floorPlanImage.removeAttribute('usemap')\r\n  }\r\n  setState({ floorPlanInteractive })\r\n}\r\n","export default ({ state, component }) => ({ target }) => {\r\n  const { root } = component\r\n\r\n  // do nothing if viewing by \"now only\", because there's nothing to collapse\r\n  if (state.sortBy === 'nowOnly') return\r\n\r\n  // do nothing if the table hasn't scrolled\r\n  const wrapper = root.querySelector('.pg-table-wrapper')\r\n  if (!wrapper.classList.contains('pg-table-wrapper--scrolled')) return\r\n\r\n  // toggle the collapsed classes\r\n  const allHeaders = root.querySelectorAll('.pg-cell-wrapper--row-header')\r\n  const COLLAPSED_CLASS = 'pg-cell-wrapper--row-header-collapsed'\r\n  const addOrRemove = target.classList.contains(COLLAPSED_CLASS) ? 'remove' : 'add'\r\n  for (const header of allHeaders) header.classList[addOrRemove](COLLAPSED_CLASS)\r\n\r\n  // also collapse the corner\r\n  const corner = root.querySelector('.pg-cell-wrapper--corner')\r\n  corner.classList[addOrRemove]('pg-cell-wrapper--corner-collapsed')\r\n}\r\n","import { clearHTML, parseHTML } from '../../../utilities'\r\nimport { renderSortDialog } from '../render'\r\n\r\nexport default ({ state, component }) => _bool => {\r\n  const { root, dataset } = component\r\n  const bool = _bool === 'true' ? true : !!_bool\r\n  const dialog = root.querySelector('.pg-dialog--sort')\r\n  const dialogContent = parseHTML(renderSortDialog(state, dataset.breakpoint))\r\n  clearHTML(dialog)\r\n  dialog.appendChild(dialogContent)\r\n  if (bool) dialog.showModal()\r\n  else dialog.close()\r\n}\r\n","import { clearHTML, parseHTML } from '../../../utilities'\r\nimport { getActiveEvent } from '../componentUtils'\r\nimport { renderEventDialog } from '../render'\r\n\r\nexport default ({ setState, component }) => encodedEvent => {\r\n  const { root } = component\r\n\r\n  // set event data\r\n  const eventJSON = decodeURIComponent(encodedEvent)\r\n  const event = JSON.parse(eventJSON)\r\n  const newState = setState({ activeEvent: getActiveEvent(event) }, { render: false })\r\n\r\n  // show the dialog\r\n  const dialog = root.querySelector('.pg-dialog--event')\r\n  const dialogContent = parseHTML(renderEventDialog(newState))\r\n  clearHTML(dialog)\r\n  dialog.appendChild(dialogContent)\r\n  if (!dialog.open) dialog.showModal()\r\n}\r\n","export default ({ component }) => () => {\r\n  const { root } = component\r\n  const dialog = root.querySelector('.pg-dialog--event')\r\n  dialog.close()\r\n}\r\n","export default ({ setState, component }) => _location => {\r\n  const { toggleSortDialog } = component\r\n  toggleSortDialog(false) // close upon selection\r\n  setState({\r\n    view: 'guide',\r\n    sortBy: 'location',\r\n    activeLocation: _location,\r\n  })\r\n}\r\n","export default ({ state, setState }) => event => {\r\n  const activeDay = event.target.value\r\n  const timeString = state.activeTime.toLocaleTimeString()\r\n  setState({\r\n    activeDay,\r\n\r\n    // also reset the active time to match the selected day\r\n    activeTime: new Date(`${activeDay} ${timeString}`),\r\n  }, {\r\n    render: false,\r\n  })\r\n}\r\n","import { DEFAULT_TIMES } from '../../../constants'\r\n\r\nexport default ({ state, setState }) => ({ target }) => {\r\n\r\n  // validate the time and autocorrect\r\n  if (target.min > target.value) target.value = target.min\r\n  if (target.max < target.value) target.value = target.max\r\n  const { interval } = state.times || DEFAULT_TIMES\r\n  const [hr, mn] = target.value.split(':')\r\n  const roundedMn = Math.round(mn / interval) * interval\r\n  const newMn = String(roundedMn).length === 1 ? `0${roundedMn}` : roundedMn\r\n  target.value = `${hr}:${newMn}`\r\n\r\n  // set the time\r\n  const { activeDay } = state\r\n  const timeString = target.value\r\n  setState({\r\n    activeTime: new Date(`${activeDay} ${timeString}`),\r\n  }, {\r\n    render: false,\r\n  })\r\n}\r\n","export default ({ setState, component }) => sortBy => {\r\n  const { toggleSortDialog } = component\r\n  toggleSortDialog(false) // close upon selection\r\n  setState({\r\n    view: 'guide',\r\n    marker: 'none',\r\n    sortBy,\r\n  })\r\n}\r\n","export default ({ setState }) => ({ target }) => {\r\n  setState({ currentSearch: target.value }, { render: false })\r\n}\r\n","import { search } from '../../../utilities'\r\n\r\nexport default ({ state, setState }) => event => {\r\n  event.preventDefault()\r\n  const { currentSearch, events } = state\r\n\r\n  // filter search results\r\n  const searchResults = events.filter(event => {\r\n    return (\r\n      search(currentSearch, event.name)\r\n      || search(currentSearch, event.location)\r\n      || search(currentSearch, event.host)\r\n      || search(currentSearch, event.category)\r\n      || search(currentSearch, event.description)\r\n    )\r\n  }).sort((prev, next) => {\r\n\r\n    // sort name matches at the top\r\n    const prevName = search(currentSearch, prev.name)\r\n    const nextName = search(currentSearch, next.name)\r\n    return !prevName && nextName ? 1 : (prevName && !nextName ? -1 : 0)\r\n  })\r\n\r\n  setState({\r\n    searchResults,\r\n    sortBy: 'search',\r\n  })\r\n}\r\n","import { getLocations, getEvents, getTimes, getFavorites, getFloorPlan } from '../../exports'\r\nimport { getDateInfo } from '../../utilities'\r\nimport { DEFAULT_EVENT, DEFAULT_TIMES } from '../../constants'\r\nimport { getActiveEvent } from './componentUtils'\r\nimport { getRender } from './render'\r\nimport {\r\n  getAddFavorite,\r\n  getHandleEsc,\r\n  getHandleHashChange,\r\n  getRemoveFavorite,\r\n  getShowFloorPlan,\r\n  getOpenEventDialog,\r\n  getToggleFloorPlanInteractive,\r\n  getToggleSortDialog,\r\n  getCloseEventDialog,\r\n  getSelectActiveLocation,\r\n  getSelectActiveDay,\r\n  getSelectActiveTime,\r\n  getSelectSortBy,\r\n  getChangeSearch,\r\n  getSearch,\r\n  getToggleHeaders,\r\n} from './actions'\r\n\r\n// A native web component for the main event schedule\r\nclass ProgramGuideNative extends HTMLElement {\r\n\r\n  // the initial state is never reflected in the UI;\r\n  // a loading spinner is rendered instead.\r\n  #state = {\r\n    locations: [],\r\n    events: [],\r\n    times: DEFAULT_TIMES,\r\n    activeDay: '',\r\n    activeTime: new Date(),\r\n    activeLocation: '',\r\n    activeEvent: getActiveEvent(DEFAULT_EVENT),\r\n    sortBy: 'location', // location | allTime | now | nowOnly | time | favorites\r\n    view: 'guide', // guide | floorPlan\r\n    marker: 'none', // one of the provided location names or 'none'\r\n    favorites: [],\r\n    currentSearch: '',\r\n    searchResults: [],\r\n    floorPlan: {},\r\n    floorPlanInteractive: false,\r\n  }\r\n\r\n  // cache to avoid unnecessary reloading\r\n  templateCache = {\r\n    floorPlanImage: new Image(),\r\n  }\r\n\r\n  constructor() {\r\n    super()\r\n    const component = this\r\n    component.root = component.attachShadow({ mode: 'open' })\r\n\r\n    // assign action methods from other files\r\n    const actionMap = {\r\n      render: getRender,\r\n      handleEsc: getHandleEsc,\r\n      handleHashChange: getHandleHashChange,\r\n      addFavorite: getAddFavorite,\r\n      removeFavorite: getRemoveFavorite,\r\n      showFloorPlan: getShowFloorPlan,\r\n      toggleFloorPlanInteractive: getToggleFloorPlanInteractive,\r\n      toggleHeaders: getToggleHeaders,\r\n      toggleSortDialog: getToggleSortDialog,\r\n      openEventDialog: getOpenEventDialog,\r\n      closeEventDialog: getCloseEventDialog,\r\n      selectActiveLocation: getSelectActiveLocation,\r\n      selectActiveDay: getSelectActiveDay,\r\n      selectActiveTime: getSelectActiveTime,\r\n      selectSortBy: getSelectSortBy,\r\n      changeSearch: getChangeSearch,\r\n      search: getSearch,\r\n    }\r\n    for (const actionName in actionMap) {\r\n      const action = actionMap[actionName]\r\n      component[actionName] = component.provideState(action)\r\n    }\r\n\r\n    // render loading spinner\r\n    component.render({ loading: true })\r\n\r\n    // asynchronously fetch data and update internal state\r\n    component.waitForFetch = getLocations().then(async locations => {\r\n\r\n      // the initial results of the async data fetcher\r\n      const programGuideData = {\r\n        events: await getEvents(),\r\n        times: await getTimes(),\r\n        favorites: await getFavorites(),\r\n        floorPlan: await getFloorPlan(),\r\n        locations: locations,\r\n      }\r\n\r\n      // load floor plan image and store it in the cache\r\n      const { floorPlanImage } = component.templateCache\r\n      const { imageSrc, dimensions } = programGuideData.floorPlan\r\n      const { height, width } = dimensions\r\n      floorPlanImage.className = 'pg-floor-plan-image'\r\n      floorPlanImage.src = imageSrc\r\n      floorPlanImage.height = height\r\n      floorPlanImage.width = width\r\n\r\n      // derive the active date and time from the earliest date in the data\r\n      const { days } = programGuideData.times || DEFAULT_TIMES\r\n      const activeDay = Object.keys(days)[0]\r\n      const firstTime = days[activeDay][0].date\r\n      const { date, time } = getDateInfo(firstTime)\r\n\r\n      // update the data and replace the loading spinner with the real element\r\n      component.setState({\r\n        ...programGuideData,\r\n        activeLocation: locations[0],\r\n        activeDay,\r\n        activeTime: new Date(`${date} ${time}`),\r\n      })\r\n    })\r\n  }\r\n\r\n  connectedCallback() {\r\n    const component = this\r\n    window.addEventListener('keydown', component.handleEsc)\r\n    component.waitForFetch.then(() => {\r\n      window.addEventListener('hashchange', component.handleHashChange)\r\n    })\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const component = this\r\n    window.removeEventListener('keydown', component.handleEsc)\r\n    window.removeEventListener('hashchange', component.handleHashChange)\r\n  }\r\n\r\n  setState(state, options = { render: true }) {\r\n    const component = this\r\n    component.#state = {\r\n      ...component.#state,\r\n      ...state,\r\n    }\r\n    if (options.render) component.render()\r\n    return { ...component.#state }\r\n  }\r\n\r\n  provideState(getCallback) {\r\n    const component = this\r\n    return (...args) => {\r\n      const state = { ...component.#state }\r\n      const setState = component.setState.bind(component)\r\n      const callback = getCallback({ state, setState, component })\r\n      return callback(...args)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProgramGuideNative\r\n","import * as Exports from '../lib/exports'\r\nimport * as Components from '../lib/uiComponents'\r\n\r\nexport default {\r\n  ...Exports,\r\n  Components,\r\n}\r\n"],"names":["DEFAULT_FLOOR_PLAN","title","imageSrc","dimensions","height","width","clickableAreas","DEFAULT_GUIDE","events","floorPlan","DEFAULT_ADD_FAVORITE","async","favoriteEvents","JSON","parse","localStorage","getItem","push","event","eventsJSON","stringify","setItem","DEFAULT_GET_FAVORITES","DEFAULT_FETCH_DATA","Promise","resolve","guide","addFavorite","getFavorites","NOW","Date","now","DEFAULT_EVENT","start","end","location","name","host","category","description","DEFAULT_CLICKABLE_AREA","shape","coords","href","alt","DEFAULT_TIMES","days","interval","NOOP","getType","val","constructor","toLowerCase","checkType","type","validString","validArray","every","t","some","isObject","obj","useFallback","fallbackObj","onFallback","_altTypes","key","fallbackValue","valid","value","empty","altTypes","altTypesArr","mismatch","useCast","getValue","status","console","warn","Object","keys","reduce","castObj","checkFilterType","filter","after","before","locations","search","clearHTML","element","i","childNodes","length","removeChild","lastChild","parseHTML","htmlStr","range","document","createRange","selectNode","body","createContextualFragment","mapString","arr","callback","map","join","roundMinutes","_date","nearestMinute","date","roundedMinutes","Math","round","getMinutes","setMinutes","WholeNumber","num","Number","toFixed","getDay","idx","short","getDateInfo","time","toLocaleTimeString","timeStyle","day","toLocaleDateString","runMethod","args","object","encodeURIComponent","string","default","String","getEventId","_start","snip","s","replace","_input","_text","formatForSimilarMatch","str","normalize","input","text","split","trim","slice","state","_hasFetched","hasFetched","this","bool","fetchQueue","forEach","waitForFetch","removeFavorite","removeIndex","findIndex","_location","cLocation","cStart","cName","splice","add","Set","times","allTimes","sort","earliestTime","min","latestTime","max","minutes","getTimeObject","timeString","getFullDay","prevTime","currentTime","getDate","find","getEvents","_filters","include","_include","exclude","_exclude","filters","Infinity","contains","getLocations","getTimes","getFloorPlan","init","data","castEvent","castFloorPlan","castClickableArea","getActiveEvent","getCellData","spanState","_event","e","hasStarted","eventName","cellType","duration","getStart","span","blank","renderSortDialog","activeDay","activeTime","_activeTime","breakpoint","beyondThreshold","window","matchMedia","matches","getTimeValue","hour12","currentTimes","minTime","maxTime","step","renderEventDialog","favorites","activeEvent","sortBy","existingFavorite","aLocation","aStart","aName","favoriteMethod","favoriteText","paragraph","toISOString","renderByLocation","activeLocation","marker","getActiveClass","className","getMarkerClass","renderByTime","_times","nowDay","nowDate","nowTime","filteredTimes","nowOnly","allTime","currentDay","renderFavorites","startDate","endDate","startTime","endTime","renderSearchResults","searchResults","renderFloorPlan","floorPlanInteractive","showMap","markerCoords","clickableArea","allX","_","allY","minX","minY","getMarkerCoords","x","y","fullHref","startsWith","isExternalLink","URL","hostname","supportCustomEvent","CustomEvent","safeDispatchEvent","target","check","dispatchEvent","findNearestDialog","el","localName","parentElement","parentNode","safeBlur","shadowRoot","activeElement","blur","inNodeList","nodeList","node","isFormMethodDialog","hasAttribute","getAttribute","findFocusableElementWithin","hostElement","query","querySelector","Element","prototype","elems","querySelectorAll","tagName","isConnected","findFormSubmitter","submitter","form","HTMLFormElement","dialogPolyfill","formSubmitter","getRootNode","maybeHandleSubmit","defaultPrevented","imagemapUseValue","dialog","preventDefault","close","dialogPolyfillInfo","dialog_","replacedStyleTop_","openAsModal_","setAttribute","show","bind","showModal","addEventListener","returnValue","MutationObserver","maybeHideModal","observe","attributes","attributeFilter","timeout","removed","cb","downgradeModal","delayModel","ev","cand","substr","clearTimeout","setTimeout","defineProperty","set","setOpen","get","backdrop_","createElement","backdropMouseEvent_","createEvent","initCustomEvent","bubbles","cancelable","detail","Event","style","zIndex","top","dm","removeDialog","removeAttribute","focus","fake","insertBefore","firstChild","tabIndex","redirectedEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","stopPropagation","focus_","updateZIndex","dialogZ","backdropZ","Error","open","pushDialog","getComputedStyle","invalid","k","ok","undefined","opacity","position","webkitOverflowScrolling","createsStackingContext","needsCentering","reposition","nextSibling","opt_returnValue","closeEvent","scrollTop","documentElement","topValue","innerHeight","offsetHeight","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","selectorText","cssTop","getPropertyValue","cssBottom","bottom","isInlinePositionSetByStylesheet","HTMLDialogElement","forceRegisterDialog","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","c","removedNodes","concat","DialogManager","blockDocument","childList","subtree","unblockDocument","removeEventListener","disconnect","updateStacking","dpi","last","appendChild","containedByTopDialog_","candidate","composedPath","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","indexOf","allowed","unshift","index","testForm","method","methodDescriptor","getOwnPropertyDescriptor","realGet","call","realSet","v","shift","offsetX","offsetY","nativeFormSubmit","submit","getRender","component","loading","root","dataset","templateCache","css","getStyles","loadingTemplate","innerHTML","content","cloneNode","renderTable","showFloorPlan","view","tableTemplate","currentSearch","renderSearchBar","dialogs","registerDialog","wrapper","handleScroll","SCROLLED_CLASS","scrollLeft","classList","remove","replaceWith","floorPlanImage","setState","openEventDialog","eventJSON","decodeURIComponent","encodedEvent","render","toggleSortDialog","closeEventDialog","hash","history","replaceState","activeLocationEl","scrollIntoView","locationName","toggleFloorPlanInteractive","_bool","addOrRemove","allHeaders","COLLAPSED_CLASS","header","dialogContent","newState","hr","mn","roundedMn","newMn","prev","next","prevName","nextName","ProgramGuideNative","HTMLElement","Image","super","attachShadow","mode","actionMap","handleEsc","getHandleEsc","handleHashChange","getHandleHashChange","getAddFavorite","getRemoveFavorite","getShowFloorPlan","getToggleFloorPlanInteractive","toggleHeaders","getToggleHeaders","getToggleSortDialog","getOpenEventDialog","getCloseEventDialog","selectActiveLocation","getSelectActiveLocation","selectActiveDay","getSelectActiveDay","selectActiveTime","getSelectActiveTime","selectSortBy","getSelectSortBy","changeSearch","getChangeSearch","getSearch","actionName","action","provideState","then","programGuideData","src","firstTime","connectedCallback","disconnectedCallback","options","getCallback","Exports","Components"],"mappings":"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"}