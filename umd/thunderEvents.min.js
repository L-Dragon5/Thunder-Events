!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).ThunderEvents=n()}(this,(function(){"use strict";const e={title:"Venue",imageSrc:"",clickableAreas:[]},n={events:[],floorPlan:e},r=()=>Promise.resolve(n),a=Date.now(),t={start:a,end:a+36e5,location:"(none)",name:"(none)"},o={shape:"rect",coords:[],href:"#",alt:""},l=()=>{},c=e=>null===e?"null":"object"==typeof e?e.constructor.name.toLowerCase():typeof e,d=(e,n)=>{const r="string"===c(n),a="array"===c(n)&&n.every((e=>"string"===c(e)));if(!r&&!a)throw"`checkType()` expects either a string or array of strings in the second argument";return r?c(e)===n:a?n.some((n=>c(e)===n)):void 0},i=e=>d(e,"object"),s=(e,n=l,r={})=>{if(!i(e))throw"`useFallback()` expects an object in the first argument";if(!d(n,"function"))throw"`useFallback()` expects a function in the second argument";if(!i(r))throw"`useFallback()` expects an object in the third argument";return(a,t)=>{const o=e[t],l=i(a),s=l?a[t]:null,p=d(s,["undefined","null"]);const g=c(s),h=r[t],u=d(h,"array")?h:d(h,"string")?[h]:[],f=g!==c(o)&&!u.some((e=>e===g));if(!l||p||f){return n(l?p?"empty":"mismatch":"invalid",t),o}return s}},p=(e,n="object",r={})=>{if(!i(e))throw"You may only cast to custom object types";return a=>{if(!i(a))return e;const t=s(e,((r,t)=>{"invalid"===r?console.warn(`The provided ${n} is not a valid object.`):"mismatch"===r?console.warn(`The \`${t}\` field expected type \`${c(e[t])}\` but got \`${c(a[t])}\`.`):"empty"===r&&console.warn(`The provided ${n} did not have the \`${t}\` field.`)}),r);return Object.keys(e).reduce(((e,n)=>(e[n]=t(a,n),e)),{})}},g=(e={})=>{if("after"in e&&!d(e.after,["number","date"]))throw"The `after` field expects a number or date";if("before"in e&&!d(e.before,["number","date"]))throw"The `before` field expects a number or date";if("locations"in e&&!d(e.locations,"array"))throw"The `locations` field expects an array";if("search"in e&&!d(e.search,["string","regexp"]))throw"The `search` field expects a string or regular expression";return!0},h={_hasFetched:!1,get hasFetched(){return this._hasFetched},set hasFetched(e){return this._hasFetched=e,!1!==e&&(this.fetchQueue.forEach((e=>e())),!0)},fetchQueue:[],waitForFetch(){return new Promise((e=>{this.hasFetched?e():this.fetchQueue.push(e)}))},guide:n,get locations(){return[...(this.guide?.events||[]).reduce(((e,n)=>d(n,"object")&&d(n.location,"string")?(e.add(n.location),e):e),new Set)]},get times(){return[...(this.guide?.events||[]).reduce(((e,n)=>d(n,"object")&&d(n.start,["number","date"])?(d(n.end,["number","date"]),e):e),new Set)]}},u=async(e={})=>{if(!i(e))throw"`getEvents()` expects an object in the first argument";const{include:n={},exclude:r={}}=e;g(n),g(r);const a={...e,include:{...n,after:n.after?Number(n.after):0,before:n.before?Number(n.before):1/0},exclude:r},{include:t={},exclude:o={}}=a;return h.guide.events.filter((e=>!(e.start<t.after)&&(!(e.start>o.after)&&(!(e.end>t.before)&&(!(e.end<o.before)&&(!("locations"in t&&!contains(t.locations,e.location))&&((!("locations"in o)||!contains(o.locations,e.location))&&(!("search"in t&&!contains(e.name,t.search))&&((!("search"in o)||!contains(e.name,o.search))&&void 0)))))))))},f=async()=>(await h.waitForFetch(),h.locations);var v=Object.freeze({__proto__:null,fetchGuide:async(n=r)=>{const a=await n();if(!i(a))throw"`fetchGuide()` must return an object";if("events"in a){if(!d(a.events,"array"))throw"The `events` field expects an array";const e=p(t,"event",{start:"date",end:"date"});h.guide.events=a.events.map(e)}if("floorPlan"in a){if(!i(a.floorPlan))throw"The `floorPlan` field expects an object";const n=p(e,"floor plan"),r=p(o,"clickable area"),t=n(a.floorPlan);h.guide.floorPlan={...t,clickableAreas:t.clickableAreas.map(r)}}h.hasFetched=!0},getEvents:u,getLocations:f,getFloorPlan:async()=>(await waitForFetch(),h.guide.floorPlan)});class w extends HTMLElement{constructor(){super();const e=this;e.root=e.attachShadow({mode:"open"});const n=document.createElement("template"),r=`<style>${e.dataset.css||"\n  .pg-table {\n    --font: sans-serif 1.5rem;\n    --font-cell: var(--font);\n    --font-header: var(--font);\n    --font-column-header: var(--font-header);\n    --font-row-header: var(--font-header);\n    --padding-cell: 1rem 2rem;\n    --padding-header: var(--padding-cell);\n    --padding-column-header: var(--padding-header);\n    --padding-row-header: var(--padding-header);\n    --color-background: midnightblue;\n    --color-cell: lightsteelblue;\n    --color-cell-empty: transparent;\n    --color-cell-content: black;\n    --color-header: steelblue;\n    --color-header-content: white;\n    --color-column-header: var(--color-header);\n    --color-column-header-content: var(--color-header-content);\n    --color-row-header: var(--color-header);\n    --color-row-header-content: var(--color-header-content);\n    --color-corner: var(--color-header);\n    background-color: var(--color-background);\n  }\n  .pg-cell-wrapper {\n    background-color: var(--color-cell);\n    font: var(--font-cell);\n    padding: var(--padding-cell);\n    text-align: center;\n  }\n  .pg-cell-wrapper--corner {\n    background-color: var(--color-corner);\n  }\n  .pg-cell-wrapper--row-header {\n    background-color: var(--color-row-header);\n    color: var(--color-row-header-content);\n    font: var(--font-row-header);\n    padding: var(--padding-row-header);\n  }\n  .pg-cell-wrapper--column-header {\n    background-color: var(--color-column-header);\n    color: var(--color-column-header-content);\n    font: var(--font-column-header);\n    padding: var(--padding-column-header);\n  }\n  .pg-cell-wrapper--data-empty {\n    background-color: var(--color-cell-empty);\n  }\n  .pg-loading {\n    --color-loading-primary: steelblue;\n    --color-loading-secondary: white;\n    --size-loader: 5rem;\n    height: 10rem;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n  }\n  .pg-loading::before,\n  .pg-loading::after {\n    bottom: 0;\n    border-radius: 50%;\n    content: '';\n    display: block;\n    left: 0;\n    margin: auto;\n    position: absolute;\n    right: 0;\n    top: 0;\n    z-index: 2;\n  }\n  @keyframes spin {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(359deg); }\n  }\n  .pg-loading::before {\n    animation: spin 1s linear infinite;\n    background-image: conic-gradient(var(--color-loading-primary), var(--color-loading-secondary));\n    border: 0.4rem solid var(--color-loading-primary);\n    height: var(--size-loader);\n    width: var(--size-loader);\n    z-index: 1;\n  }\n  .pg-loading::after {\n    background-color: var(--color-loading-primary);\n    border: 0 solid;\n    height: calc(var(--size-loader) - 1rem);\n    width: calc(var(--size-loader) - 1rem);\n    z-index: 2;\n  }\n"}</style>`;n.innerHTML=`\n      ${r}\n      <div class="pg-loading"></div>\n    `,e.root.appendChild(n.content.cloneNode(!0)),u().then((async n=>{const a=await f(),t=document.createElement("template");t.innerHTML=`\n        ${r}\n        <table class="pg-table">\n          <thead class="pg-header">\n            <tr class="pg-row">\n              <td class="pg-cell-wrapper pg-cell-wrapper--corner">\n                <div class="pg-cell pg-cell--corner"></div>\n              </td>\n              ${a.map((e=>`\n                <th class="pg-cell-wrapper pg-cell-wrapper--column-header">\n                  <div class="pg-cell pg-cell--column-header">${e}</div>\n                </th>\n              `))}\n            </tr>\n          </thead>\n          <tbody class="pg-body">\n            <tr class="pg-row">\n              <th class="pg-cell-wrapper pg-cell-wrapper--row-header">\n                <div class="pg-cell pg-cell--row-header">12:00 PM</div>\n              </th>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data" rowspan="2">\n                <div class="pg-cell pg-cell--data">Event 1</div>\n              </td>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data">\n                <div class="pg-cell pg-cell--data">Event 5</div>\n              </td>\n            </tr>\n            <tr class="pg-row">\n              <th class="pg-cell-wrapper pg-cell-wrapper--row-header">\n                <div class="pg-cell pg-cell--row-header">1:00 PM</div>\n              </th>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data">\n                <div class="pg-cell pg-cell--data">Event 6</div>\n              </td>\n            </tr>\n            <tr class="pg-row">\n              <th class="pg-cell-wrapper pg-cell-wrapper--row-header">\n                <div class="pg-cell pg-cell--row-header">2:00 PM</div>\n              </th>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data pg-cell-wrapper--data-empty">\n                <div class="pg-cell pg-cell--data pg-cell--data-empty"></div>\n              </td>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data">\n                <div class="pg-cell pg-cell--data">Event 7</div>\n              </td>\n            </tr>\n            <tr class="pg-row">\n              <th class="pg-cell-wrapper pg-cell-wrapper--row-header">\n                <div class="pg-cell pg-cell--row-header">3:00 PM</div>\n              </th>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data">\n                <div class="pg-cell pg-cell--data">Event 4</div>\n              </td>\n              <td class="pg-cell-wrapper pg-cell-wrapper--data">\n                <div class="pg-cell pg-cell--data">Event 8</div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      `,(e=>{let n=e.childNodes.length;for(;n--;)e.removeChild(e.lastChild)})(e.root),e.root.appendChild(t.content.cloneNode(!0))}))}}return{...v,Components:Object.freeze({__proto__:null,ProgramGuideNative:w})}}));